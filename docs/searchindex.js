Search.setIndex({"docnames": ["fusion", "fusion/architecture", "fusion/architecture/alexnet", "fusion/architecture/alexnet/tests", "fusion/architecture/base_block", "fusion/architecture/base_block/tests", "fusion/architecture/dcgan", "fusion/architecture/dcgan/tests", "fusion/architecture/projection_head", "fusion/architecture/projection_head/tests", "fusion/criterion", "fusion/criterion/loss", "fusion/criterion/loss/dim", "fusion/criterion/loss/dim/tests", "fusion/criterion/loss/tests", "fusion/criterion/mi_estimator", "fusion/criterion/mi_estimator/clip", "fusion/criterion/mi_estimator/clip/tests", "fusion/criterion/mi_estimator/critic", "fusion/criterion/mi_estimator/critic/tests", "fusion/criterion/mi_estimator/measure", "fusion/criterion/mi_estimator/penalty", "fusion/criterion/mi_estimator/penalty/tests", "fusion/criterion/mi_estimator/tests", "fusion/criterion/misc", "fusion/criterion/misc/cca", "fusion/criterion/misc/cca/tests", "fusion/criterion/misc/mmvae", "fusion/dataset", "fusion/dataset/mnist_svhn", "fusion/dataset/mnist_svhn/tests", "fusion/dataset/oasis", "fusion/dataset/two_view_mnist", "fusion/dataset/two_view_mnist/tests", "fusion/dataset/ukbiobank", "fusion/dataset/ukbiobank/tests", "fusion/experiment", "fusion/model", "fusion/model/ae", "fusion/model/ae/tests", "fusion/model/dim", "fusion/model/dim/tests", "fusion/model/encoder_extractor", "fusion/model/linear_evaluator", "fusion/model/misc", "fusion/model/pixl", "fusion/model/saliency", "fusion/model/supervised", "fusion/optimizer", "fusion/runner", "fusion/runner/catalyst", "fusion/scheduler", "fusion/task", "fusion/task/feature_extraction", "fusion/task/inference", "fusion/task/linear_evaluation", "fusion/task/logits_extraction", "fusion/task/logreg_evaluation", "fusion/task/pretraining", "fusion/task/saliency", "fusion/task/tsne", "fusion/utils", "getting_started", "getting_started/examples", "getting_started/installation", "getting_started/tutorials", "index"], "filenames": ["fusion.rst", "fusion/architecture.rst", "fusion/architecture/alexnet.rst", "fusion/architecture/alexnet/tests.rst", "fusion/architecture/base_block.rst", "fusion/architecture/base_block/tests.rst", "fusion/architecture/dcgan.rst", "fusion/architecture/dcgan/tests.rst", "fusion/architecture/projection_head.rst", "fusion/architecture/projection_head/tests.rst", "fusion/criterion.rst", "fusion/criterion/loss.rst", "fusion/criterion/loss/dim.rst", "fusion/criterion/loss/dim/tests.rst", "fusion/criterion/loss/tests.rst", "fusion/criterion/mi_estimator.rst", "fusion/criterion/mi_estimator/clip.rst", "fusion/criterion/mi_estimator/clip/tests.rst", "fusion/criterion/mi_estimator/critic.rst", "fusion/criterion/mi_estimator/critic/tests.rst", "fusion/criterion/mi_estimator/measure.rst", "fusion/criterion/mi_estimator/penalty.rst", "fusion/criterion/mi_estimator/penalty/tests.rst", "fusion/criterion/mi_estimator/tests.rst", "fusion/criterion/misc.rst", "fusion/criterion/misc/cca.rst", "fusion/criterion/misc/cca/tests.rst", "fusion/criterion/misc/mmvae.rst", "fusion/dataset.rst", "fusion/dataset/mnist_svhn.rst", "fusion/dataset/mnist_svhn/tests.rst", "fusion/dataset/oasis.rst", "fusion/dataset/two_view_mnist.rst", "fusion/dataset/two_view_mnist/tests.rst", "fusion/dataset/ukbiobank.rst", "fusion/dataset/ukbiobank/tests.rst", "fusion/experiment.rst", "fusion/model.rst", "fusion/model/ae.rst", "fusion/model/ae/tests.rst", "fusion/model/dim.rst", "fusion/model/dim/tests.rst", "fusion/model/encoder_extractor.rst", "fusion/model/linear_evaluator.rst", "fusion/model/misc.rst", "fusion/model/pixl.rst", "fusion/model/saliency.rst", "fusion/model/supervised.rst", "fusion/optimizer.rst", "fusion/runner.rst", "fusion/runner/catalyst.rst", "fusion/scheduler.rst", "fusion/task.rst", "fusion/task/feature_extraction.rst", "fusion/task/inference.rst", "fusion/task/linear_evaluation.rst", "fusion/task/logits_extraction.rst", "fusion/task/logreg_evaluation.rst", "fusion/task/pretraining.rst", "fusion/task/saliency.rst", "fusion/task/tsne.rst", "fusion/utils.rst", "getting_started.rst", "getting_started/examples.rst", "getting_started/installation.rst", "getting_started/tutorials.rst", "index.rst"], "titles": ["fusion", "architecture", "alexnet", "tests", "base_block", "tests", "dcgan", "tests", "projection_head", "tests", "criterion", "loss", "dim", "tests", "tests", "mi_estimator", "clip", "tests", "critic", "tests", "measure", "penalty", "tests", "tests", "misc", "cca package", "tests", "mmvae", "dataset", "mnist_svhn", "tests", "oasis", "two_view_mnist", "tests", "ukbiobank", "tests", "experiment", "model", "ae", "tests", "dim", "tests", "encoder_extractor", "linear_evaluator", "misc", "pixl", "saliency", "supervised", "optimizer", "runner", "catalyst", "scheduler", "task", "feature_extraction", "inference package", "linear_evaluation", "logits_extraction", "logreg_evaluation", "pretraining", "saliency", "tsne", "utils", "Getting Started", "Examples", "Installation Guide", "Tutorials", "Welcome to fusion\u2019s documentation!"], "terms": {"architectur": [0, 2, 3, 4, 5, 6, 7, 8, 9, 37, 38, 40, 45, 47, 66], "alexnet": [0, 1, 3], "test": [0, 1, 2, 4, 6, 8, 10, 11, 12, 15, 16, 18, 21, 24, 25, 28, 29, 32, 34, 37, 38, 40], "test_alexnet_encod": [0, 1, 2], "test_anees_alexnet": [0, 1, 2], "alexnet_encod": [0, 1], "alexnetencod": [0, 1, 2], "anees_alexnet": [0, 1], "aneesalexnet": [0, 1, 2], "base_block": [0, 1, 5], "test_base_conv_lay": [0, 1, 4], "base_conv_lay": [0, 1], "baseconvlay": [0, 1, 4], "util": [0, 1, 10, 66], "flatten": [0, 1, 4], "unflatten": [0, 1, 4], "dcgan": [0, 1, 7], "test_dcgan_autoencod": [0, 1, 6], "test_dcgan_decod": [0, 1, 6], "test_dcgan_encod": [0, 1, 6], "dcgan_autoencod": [0, 1], "dcganautoencod": [0, 1, 6], "dcgan_decod": [0, 1], "dcgandecod": [0, 1, 6], "dcgan_encod": [0, 1], "dcganencod": [0, 1, 6], "projection_head": [0, 1, 9], "test_conv_head": [0, 1, 8], "modul": [0, 1, 2, 4, 6, 11, 37, 42, 43], "test_latent_head": [0, 1, 8], "conv_head": [0, 1], "convhead": [0, 1, 8], "latent_head": [0, 1], "latenthead": [0, 1, 8], "abasearchitectur": [0, 2, 4, 6, 8], "get_lay": [0, 1], "init_weight": [0, 1, 2, 4, 6, 8], "train": [0, 1, 2, 4, 6, 8, 10, 11, 24, 25, 28, 37, 38, 40, 42, 43, 45, 47, 53, 54, 55, 57, 58, 59, 60], "architecture_provid": 0, "criterion": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50, 52, 57, 58, 66], "loss": [0, 10, 12, 13, 14, 15, 20, 24, 25], "dim": [0, 10, 11, 13, 37, 41, 45], "base_dim": [0, 10, 11], "cc_dim": [0, 10, 11], "cr_dim": [0, 10, 11], "rr_dim": [0, 10, 11], "xx_dim": [0, 10, 11], "test_cr_cca": [0, 10, 11], "test_dcca": [0, 10, 11], "test_rr_a": [0, 10, 11], "test_spatial_multi_dim": [0, 10, 11], "test_volumetric_multi_dim": [0, 10, 11], "abaseloss": [0, 10, 25], "ae": [0, 10, 37, 39], "cr_cca": [0, 10], "choose_multi_dim": [0, 10, 11], "dccae": [0, 10], "multi_dim": [0, 10], "multidim": [0, 10, 11], "spatialmultidim": [0, 10, 11], "volumetricmultidim": [0, 10, 11], "pixl": [0, 10, 37], "pytorch_wrapp": [0, 10], "bcewithlogitsloss": [0, 10, 11], "customcrossentropyloss": [0, 10, 11], "rr_ae": [0, 10], "supcon": [0, 10], "supconloss": [0, 10, 11], "supcon_dim": [0, 10], "supcondim": [0, 10, 11], "mi_estim": [0, 10, 16, 17, 18, 19, 20, 21, 22, 23], "clip": [0, 10, 15, 17], "base_clip": [0, 10, 15], "tahn_clip": [0, 10, 15], "critic": [0, 10, 15, 19], "base_crit": [0, 10, 15], "separable_crit": [0, 10, 15], "measur": [0, 10, 15], "base_measur": [0, 10, 15], "penalti": [0, 10, 15, 22], "base_penalti": [0, 10, 15], "l2_penalti": [0, 10, 15], "test_estim": [0, 10, 15], "base_mi_estim": [0, 10], "abasemiestim": [0, 10, 12, 15], "fenchel_du": [0, 10], "fencheldualestim": [0, 10, 15], "infonc": [0, 10], "infonceestim": [0, 10, 15], "misc": [0, 10, 25, 26, 37], "cca": [0, 10, 24, 26], "packag": [0, 10, 24, 52], "canonical_correl": [0, 10, 24], "mmvae": [0, 10, 24], "total_loss_summ": [0, 10, 24], "criterion_provid": 0, "dataset": [0, 29, 30, 31, 32, 33, 34, 35, 52, 58, 66], "mnist_svhn": [0, 28, 30], "test_mnist_svhn": [0, 28, 29], "mnistsvhn": [0, 28, 29], "transform": [0, 28], "mnisttransform": [0, 28, 29], "svhntransform": [0, 28, 29], "oasi": [0, 28], "mnimasktransform": [0, 28, 31], "volumetricrandomcrop": [0, 28, 31], "two_view_mnist": [0, 28, 33], "test_two_view_mnist": [0, 28, 32], "randomrot": [0, 28, 32], "randomrotationtransform": [0, 28, 32], "twoviewmnisttransform": [0, 28, 32], "uniformnois": [0, 28, 32], "uniformnoisetransform": [0, 28, 32], "unitintervalscal": [0, 28, 32], "twoviewmnist": [0, 28, 32], "ukbiobank": [0, 28, 35], "test_ukbiobank": [0, 28, 34], "customrandomblur": [0, 28, 34], "ukbiobank_agp": [0, 28], "ukbiobankagp": [0, 28, 34], "ukbiobank_mp": [0, 28], "ukbiobankmp": [0, 28, 34], "ukbiobank_mp_ram": [0, 28], "ukbiobankmpram": [0, 28, 34], "ukbiobank_ram": [0, 28], "ukbiobankram": [0, 28, 34], "abasedataset": [0, 29, 31, 32, 34], "get_all_load": [0, 28], "get_cv_load": [0, 28], "get_load": [0, 28, 49, 50], "load": [0, 28, 29, 31, 32, 34], "num_class": [0, 28, 43, 45, 47], "abasetransform": [0, 32], "dataset_provid": 0, "setid": [0, 28], "infer": [0, 28, 52], "valid": [0, 28], "seed_work": [0, 28], "experi": [0, 50, 66], "setup_new_experi": [0, 36], "start": [0, 31, 36, 66], "model": [0, 6, 8, 11, 25, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66], "test_a": [0, 37, 38], "test_dim": [0, 10, 11, 12, 37, 40], "encoder_extractor": [0, 37], "encoderextractor": [0, 37, 42], "linear_evalu": [0, 37, 52], "linearevalu": [0, 37, 43], "salienc": [0, 37, 52], "smoothgrad": [0, 37], "smoothvanillabackprop": [0, 37, 46], "supervis": [0, 11, 37], "abasemodel": [0, 38, 40, 47], "get_encod": [0, 37], "get_encoder_list": [0, 37, 45], "model_provid": 0, "optim": [0, 49, 50, 52, 55, 57, 58, 66], "optimizer_provid": 0, "runner": [0, 50, 52, 58, 59, 66], "catalyst": [0, 49], "catalyst_runn": [0, 49], "catalystrunn": [0, 49, 50], "mnist_svhn_runn": [0, 49], "mnistsvhnrunn": [0, 49, 50], "oasis_runn": [0, 49], "oasisrunn": [0, 49, 50], "abaserunn": [0, 50], "runner_provid": 0, "schedul": [0, 49, 50, 52, 55, 57, 58, 66], "scheduler_provid": 0, "task": [0, 53, 54, 55, 56, 57, 58, 59, 60, 66], "feature_extract": [0, 52], "feature_extraction_task": [0, 52], "featureextractiontask": [0, 52, 53], "featureextractiontaskbuild": [0, 52, 53], "inference_task": [0, 52], "inferencetask": [0, 52, 54], "inferencetaskbuild": [0, 52, 54, 56], "linear_evaluation_task": [0, 52], "linearevaluationtask": [0, 52, 55, 57], "linearevaluationtaskbuild": [0, 52, 55, 57], "logits_extract": [0, 52], "logits_extraction_task": [0, 52], "logitsextractiontask": [0, 52, 56], "logitsextractiontaskbuild": [0, 52, 56], "logreg_evalu": [0, 52], "logreg_evaluation_task": [0, 52], "customweightsandbiasescallback": [0, 52, 57], "logregevaluationtask": [0, 52, 53, 54, 57, 59, 60], "logregevaluationtaskbuild": [0, 52, 53, 54, 57, 59, 60], "pretrain": [0, 31, 34, 52, 57, 59], "pretraining_task": [0, 52], "pretrainingtask": [0, 52, 58], "pretrainingtaskbuild": [0, 52, 55, 58], "saliencytask": [0, 52, 59], "saliencytaskbuild": [0, 52, 59], "tsne": [0, 52], "tsne_task": [0, 52], "tsnetask": [0, 52, 60], "tsnetaskbuild": [0, 52, 60], "atask": [0, 55, 56, 58], "run": [0, 2, 11, 52, 53, 54, 55, 56, 57, 58, 59, 60], "task_arg": [0, 52, 53, 54, 55, 56, 57, 58, 59, 60], "ataskbuild": [0, 52, 58], "add_criterion": [0, 52, 57, 58], "add_dataset": [0, 52, 58], "add_model": [0, 52, 53, 54, 55, 57, 58, 59, 60], "add_optim": [0, 52, 55, 57, 58], "add_runn": [0, 52, 58, 59], "add_schedul": [0, 52, 55, 57, 58], "create_new_task": [0, 52, 53, 54, 55, 56, 57, 58, 59, 60], "taskdirector": [0, 52], "construct_task": [0, 52], "get_task": [0, 52], "taskid": [0, 31, 34, 52], "task_builder_provid": 0, "object_provid": 0, "factori": [0, 61], "creat": [0, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_object": [0, 61], "objectprovid": [0, 61], "get": [0, 1, 61, 66], "testalexnetencod": [1, 2, 3], "forward": [1, 2, 4, 6, 8, 10, 11, 24, 25, 37, 38, 40, 42, 43, 45, 46, 47], "testbaseconvlay": [1, 4, 5], "testdcganautoencod": [1, 6, 7], "testdcgandecod": [1, 6, 7], "testdcganencod": [1, 6, 7], "testconvhead": [1, 8, 9], "testlatenthead": [1, 8, 9], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "fusion": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "input_dim": [1, 2, 4, 6, 8, 11], "int": [1, 2, 4, 6, 8, 11, 20, 25, 28, 29, 31, 32, 34, 37, 38, 40, 42, 43, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60], "2": [1, 2, 4, 6, 8, 11, 28, 29, 31, 32, 34], "conv_layer_class": [1, 2, 4, 6, 8], "type": [1, 2, 4, 6, 8, 11, 20, 25], "torch": [1, 2, 6, 8, 20, 50], "nn": [1, 2, 6, 8], "conv": [1, 2, 6, 8], "_convnd": [1, 2, 4, 6, 8], "conv2d": [1, 2, 6, 8], "norm_layer_class": [1, 2, 4, 6, 8], "batchnorm": [1, 2, 6, 8], "_batchnorm": [1, 2, 4, 6, 8], "none": [1, 2, 4, 6, 11, 15, 25, 28, 29, 31, 32, 34, 38, 40, 45, 50], "dp_layer_class": [1, 2, 4], "dropout": [1, 2, 4], "_dropoutnd": [1, 2, 4], "activation_class": [1, 2, 4, 6, 8], "pool_layer_class": [1, 2, 4], "pool": [1, 2], "_maxpoolnd": [1, 2, 4], "weights_initialization_typ": [1, 2, 4, 6, 8], "str": [1, 2, 4, 6, 8, 11, 25, 28, 29, 31, 32, 34, 37, 38, 40, 45, 47, 50, 57, 61], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "abc": [1, 11, 12, 15, 16, 18, 20, 21, 28, 37, 49, 52], "layer": [1, 4], "return": [1, 4, 6, 8, 11, 20, 25, 28, 38, 40, 42, 43, 45, 47, 50, 61], "abstract": [1, 20, 28, 52], "weight": [1, 2, 4, 6, 8, 11, 12, 21], "initi": [1, 2, 4, 6, 8], "bool": [1, 2, 4, 6, 8, 11, 20, 25, 28, 29, 31, 32, 34, 37, 38, 40, 42, 43, 45, 47, 50], "test_forward": [2, 3, 4, 5, 6, 7, 8, 9, 38, 39, 40, 41], "dim_in": [2, 6, 8], "dim_l": [2, 6, 8, 43, 45, 46, 47], "dim_cl": [2, 6, 11], "input_s": [2, 6, 31, 34], "128": [2, 34], "batchnorm2d": [2, 6, 8], "dropout2d": 2, "activ": [2, 4, 6, 8], "relu": [2, 6, 8], "maxpool2d": 2, "xavier_uniform": [2, 4, 6, 8], "x": [2, 4, 6, 8, 20, 38, 40, 42, 43, 45, 47], "tensor": [2, 4, 6, 8, 11, 20, 25, 34, 38, 40, 42, 43, 45, 47, 50], "defin": [2, 11], "comput": [2, 11, 25], "perform": [2, 11, 20], "everi": [2, 11], "call": [2, 11], "should": [2, 11], "overridden": [2, 11], "all": [2, 4, 11, 15, 16, 18, 20, 21, 25], "subclass": [2, 11], "although": [2, 11], "recip": [2, 11], "pass": [2, 4, 11, 25], "need": [2, 11], "within": [2, 11], "thi": [2, 4, 11, 15, 16, 18, 20, 21], "function": [2, 4, 11, 20], "one": [2, 11], "instanc": [2, 11], "afterward": [2, 11], "instead": [2, 11], "sinc": [2, 11], "former": [2, 11], "take": [2, 11], "care": [2, 11], "regist": [2, 11], "hook": [2, 11], "while": [2, 11], "latter": [2, 11], "silent": [2, 11], "ignor": [2, 11], "them": [2, 11, 25], "methodnam": [3, 5, 7, 9, 13, 14, 17, 19, 22, 23, 26, 30, 33, 35, 39, 41], "runtest": [3, 5, 7, 9, 13, 14, 17, 19, 22, 23, 26, 30, 33, 35, 39, 41], "testcas": [3, 5, 7, 9, 13, 14, 17, 19, 22, 23, 26, 30, 33, 35, 39, 41], "conv_layer_arg": 4, "dict": [4, 6, 11, 25, 28, 31, 37, 38, 40, 45, 47, 50], "ani": [4, 11, 15, 16, 18, 20, 21, 25, 37, 38, 40, 45, 47, 50, 61], "norm_layer_arg": 4, "dp_layer_arg": 4, "activation_arg": 4, "pool_layer_arg": 4, "tupl": [4, 6, 11, 25, 34], "method": [4, 6, 8, 11, 29, 38, 47, 53, 54, 55, 56, 57, 58, 59, 60], "custom": 4, "convolut": [4, 6, 8], "paramet": [4, 6, 8, 11, 20, 25, 28, 38, 40, 42, 43, 45, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61], "input": [4, 6, 8, 11, 20, 38, 40, 45, 47], "The": [4, 6, 11, 15, 16, 18, 21], "after": 4, "through": 4, "specifi": [4, 6], "sub": 4, "normal": 4, "conv_lat": 4, "onli": 4, "gain": 4, "float": [4, 11, 12, 16, 18, 21, 25, 34], "1": [4, 8, 11, 12, 18, 31, 32, 34, 46], "4142135623730951": 4, "input_tensor": 4, "receiv": 4, "an": [4, 6, 11, 15, 16, 18, 21, 28, 52], "self": [4, 6], "time": 4, "dim_h": [6, 8], "32": 6, "conv_t_layer_class": 6, "convtranspose2d": 6, "leakyrelu": 6, "autoencod": [6, 38], "latent": [6, 8], "variabl": 6, "x_hat": 6, "A": [6, 11, 15, 16, 18, 20, 21], "reconstruct": 6, "origin": 6, "z": 6, "encod": [6, 42, 43, 46], "decod": 6, "featur": [6, 11], "map": [6, 50], "width": 6, "_dim_cl": 6, "negative_slop": 6, "0": [6, 11, 12, 16, 18, 20, 21, 25, 28, 29, 31, 32, 34, 37, 46, 50], "num_h_lay": 8, "use_bia": 8, "fals": [8, 20, 28, 29, 31, 32, 34, 45], "head": 8, "use_linear": 8, "use_bn": 8, "true": [8, 25, 43, 46], "param": 8, "basedim": [10, 11, 12], "ccdim": [10, 11, 12], "crdim": [10, 11, 12], "rrdim": [10, 11, 12], "xxdim": [10, 11, 12], "testspatialmultidim": [10, 11, 14], "testdcca": [10, 11, 14], "test_clip": [10, 15, 16], "abaseclip": [10, 15, 16], "tahnclip": [10, 15, 16], "test_separable_crit": [10, 15, 18], "abasecrit": [10, 15, 18], "cosinesimilar": [10, 15, 18], "scaleddotproduct": [10, 15, 18], "separablecrit": [10, 15, 18], "abasemeasur": [10, 15, 20], "dvmeasur": [10, 15, 20], "ganmeasur": [10, 15, 20], "h2measur": [10, 15, 20], "jsdmeasur": [10, 15, 20], "klmeasur": [10, 15, 20], "rklmeasur": [10, 15, 20], "w1measur": [10, 15, 20], "x2measur": [10, 15, 20], "log_sum_exp": [10, 15, 20], "test_penalti": [10, 15, 21], "abasepenalti": [10, 15, 21], "l2penalti": [10, 15, 21], "testmiestim": [10, 15, 23], "test_canonical_correl": [10, 24, 25], "canonicalcorrel": [10, 24, 25], "testdim": [11, 12, 13, 37, 40, 41], "pred": [11, 25], "modeloutput": [11, 25, 38, 40, 42, 43, 45], "target": [11, 25], "kwarg": [11, 34, 46, 50, 61], "list": [11, 15, 20, 28, 29, 31, 32, 34, 37, 38, 40, 45, 47], "estimator_set": 11, "set": [11, 28], "cca_arg": 11, "output": [11, 25], "howev": [11, 15, 20, 25], "do": [11, 15, 16, 18, 21, 25], "us": [11, 15, 16, 18, 20, 21, 25], "total": [11, 25], "raw_loss": [11, 25], "dictionari": [11, 25, 28, 53, 54, 55, 56, 57, 58, 59, 60], "log": [11, 20, 25], "total_loss": [11, 24, 25], "choos": 11, "implement": 11, "multi": 11, "object": [11, 29, 36, 46, 52, 57, 61], "number": [11, 28], "dimens": 11, "e": 11, "g": 11, "imag": [11, 34], "i": [11, 15, 16, 18, 20, 21], "dimension": 11, "3": [11, 15, 20, 34], "volum": [11, 31], "multi_dim_typ": 11, "mit": [11, 15, 16, 18, 21], "licens": [11, 15, 16, 18, 20, 21], "copyright": [11, 15, 16, 18, 20, 21], "c": [11, 15, 16, 18, 20, 21], "2019": [11, 15, 16, 18, 21], "philip": [11, 15, 16, 18, 21], "bachman": [11, 15, 16, 18, 21], "permiss": [11, 15, 16, 18, 20, 21], "herebi": [11, 15, 16, 18, 21], "grant": [11, 15, 16, 18, 21], "free": [11, 15, 16, 18, 21], "charg": [11, 15, 16, 18, 21], "person": [11, 15, 16, 18, 21], "obtain": [11, 15, 16, 18, 21], "copi": [11, 15, 16, 18, 21], "softwar": [11, 15, 16, 18, 20, 21], "associ": [11, 15, 16, 18, 21], "document": [11, 15, 16, 18, 20, 21], "file": [11, 15, 16, 18, 21], "deal": [11, 15, 16, 18, 21], "without": [11, 15, 16, 18, 20, 21], "restrict": [11, 15, 16, 18, 21], "includ": [11, 15, 16, 18, 20, 21], "limit": [11, 15, 16, 18, 20, 21], "right": [11, 15, 16, 18, 20, 21], "modifi": [11, 15, 16, 18, 21], "merg": [11, 15, 16, 18, 21], "publish": [11, 15, 16, 18, 21], "distribut": [11, 15, 16, 18, 20, 21], "sublicens": [11, 15, 16, 18, 21], "sell": [11, 15, 16, 18, 21], "permit": [11, 15, 16, 18, 20, 21], "whom": [11, 15, 16, 18, 21], "furnish": [11, 15, 16, 18, 21], "so": [11, 15, 16, 18, 21], "subject": [11, 15, 16, 18, 21, 34], "follow": [11, 15, 16, 18, 20, 21], "condit": [11, 15, 16, 18, 20, 21], "abov": [11, 15, 16, 18, 20, 21], "notic": [11, 15, 16, 18, 20, 21], "shall": [11, 15, 16, 18, 20, 21], "substanti": [11, 15, 16, 18, 21], "portion": [11, 15, 16, 18, 21], "THE": [11, 15, 16, 18, 20, 21], "provid": [11, 15, 16, 18, 20, 21], "AS": [11, 15, 16, 18, 20, 21], "warranti": [11, 15, 16, 18, 20, 21], "OF": [11, 15, 16, 18, 20, 21], "kind": [11, 15, 16, 18, 21], "express": [11, 15, 16, 18, 20, 21], "OR": [11, 15, 16, 18, 20, 21], "impli": [11, 15, 16, 18, 20, 21], "BUT": [11, 15, 16, 18, 20, 21], "NOT": [11, 15, 16, 18, 20, 21], "TO": [11, 15, 16, 18, 20, 21], "merchant": [11, 15, 16, 18, 20, 21], "fit": [11, 15, 16, 18, 20, 21], "FOR": [11, 15, 16, 18, 20, 21], "particular": [11, 15, 16, 18, 20, 21], "purpos": [11, 15, 16, 18, 20, 21], "AND": [11, 15, 16, 18, 20, 21], "noninfring": [11, 15, 16, 18, 21], "IN": [11, 15, 16, 18, 20, 21], "NO": [11, 15, 16, 18, 20, 21], "event": [11, 15, 16, 18, 20, 21, 50], "author": [11, 15, 16, 18, 21], "holder": [11, 15, 16, 18, 20, 21], "BE": [11, 15, 16, 18, 20, 21], "liabl": [11, 15, 16, 18, 20, 21], "claim": [11, 15, 16, 18, 21], "damag": [11, 15, 16, 18, 20, 21], "other": [11, 15, 16, 18, 20, 21], "liabil": [11, 15, 16, 18, 20, 21], "whether": [11, 15, 16, 18, 20, 21], "action": [11, 15, 16, 18, 21], "contract": [11, 15, 16, 18, 20, 21], "tort": [11, 15, 16, 18, 20, 21], "otherwis": [11, 15, 16, 18, 20, 21], "aris": [11, 15, 16, 18, 20, 21], "from": [11, 15, 16, 18, 20, 21, 53, 54, 55, 56, 57, 58, 59, 60], "out": [11, 15, 16, 18, 20, 21, 34], "connect": [11, 15, 16, 18, 21], "WITH": [11, 15, 16, 18, 21], "mode": 11, "cr": 11, "xx": 11, "cc": 11, "rr": 11, "trade_off": 11, "5": [11, 28, 29, 31, 32, 34], "binari": [11, 15, 20], "cross": [11, 28], "entropi": 11, "logit": 11, "between": 11, "": [11, 53, 54, 55, 56, 57, 58, 59, 60], "bsd": [11, 15, 20], "claus": [11, 15, 20], "2020": 11, "yonglong": 11, "tian": 11, "reserv": [11, 15, 20], "redistribut": [11, 15, 20], "sourc": [11, 15, 20, 28, 29, 31, 32, 34, 37, 38, 40, 45, 47], "form": [11, 15, 20], "modif": [11, 15, 20], "ar": [11, 15, 20], "met": [11, 15, 20], "code": [11, 15, 20], "must": [11, 15, 20], "retain": [11, 15, 20], "disclaim": [11, 15, 20], "reproduc": [11, 15, 20], "materi": [11, 15, 20], "BY": [11, 15, 20], "contributor": [11, 15, 20], "direct": [11, 15, 20], "indirect": [11, 15, 20], "incident": [11, 15, 20], "special": [11, 15, 20], "exemplari": [11, 15, 20], "consequenti": [11, 15, 20], "procur": [11, 15, 20], "substitut": [11, 15, 20], "good": [11, 15, 20], "servic": [11, 15, 20], "data": [11, 15, 20, 28, 31, 34], "profit": [11, 15, 20], "busi": [11, 15, 20], "interrupt": [11, 15, 20], "caus": [11, 15, 20], "ON": [11, 15, 20], "theori": [11, 15, 20], "strict": [11, 15, 20], "neglig": [11, 15, 20], "wai": [11, 15, 20], "even": [11, 15, 20], "IF": [11, 15, 20], "advis": [11, 15, 20], "possibl": [11, 15, 20], "SUCH": [11, 15, 20], "temperatur": [11, 18], "07": 11, "contrast_mod": 11, "base_temperatur": 11, "contrast": 11, "learn": 11, "http": 11, "arxiv": 11, "org": 11, "pdf": 11, "2004": 11, "11362": 11, "It": 11, "also": 11, "support": 11, "unsupervis": 11, "simclr": 11, "label": 11, "mask": [11, 28, 31, 34], "If": 11, "both": 11, "degener": 11, "2002": 11, "05709": 11, "hidden": 11, "vector": 11, "shape": [11, 31], "bsz": 11, "n_view": 11, "ground": 11, "truth": 11, "mask_": 11, "j": 11, "sampl": 11, "ha": 11, "same": 11, "can": 11, "asymmetr": 11, "scalar": 11, "critic_set": [11, 15], "clip_set": [11, 15], "penalty_set": [11, 15], "test_cc_dim": [12, 13], "test_cr_dim": [12, 13], "test_rr_dim": [12, 13], "test_xx_dim": [12, 13], "estim": 12, "testclip": [15, 16, 17], "clip_valu": [15, 16], "testseparablecrit": [15, 18, 19], "get_negative_expect": [15, 20], "get_positive_expect": [15, 20], "testpenalti": [15, 21, 22], "test_fenchel_du": [15, 23], "test_infonce_estim": [15, 23], "2018": [15, 20], "devon": [15, 20], "hjelm": [15, 20], "neither": [15, 20], "name": [15, 20], "nor": [15, 20], "its": [15, 20], "mai": [15, 20], "endors": [15, 20], "promot": [15, 20], "product": [15, 20], "deriv": [15, 20], "specif": [15, 20, 28], "prior": [15, 20], "written": [15, 20], "jsd": 15, "test_tahn_clip": [16, 17], "10": 16, "properti": [16, 28, 31, 52], "test_cosine_similar": [18, 19], "test_scaled_dot_product": [18, 19], "averag": 20, "q": 20, "p": [20, 31], "axi": 20, "sum": 20, "exp": 20, "over": 20, "which": 20, "test_l2_penalti": [21, 22], "04": 21, "testcanonicalcorrel": [24, 25, 26], "test_canonincal_correl": [25, 26], "ep": 25, "1e": 25, "09": 25, "r1": 25, "001": 25, "r2": 25, "use_all_singular_valu": 25, "num_top_canonical_compon": 25, "testmnistsvhn": [28, 29, 30], "affin": [28, 31], "header": [28, 31], "orient": [28, 31], "apply_transform": [28, 31, 34], "process_volum": [28, 31], "testtwoviewmnist": [28, 32, 33], "testukbiobank": [28, 34, 35], "apply_blur": [28, 34], "blur": [28, 34], "get_param": [28, 34], "label_2_nam": [28, 34], "dataset_dir": [28, 29, 31, 32, 34], "fold": [28, 29, 31, 32, 34], "num_fold": [28, 29, 31, 32, 34], "batch_siz": [28, 29, 31, 32, 34, 49, 50], "shuffl": [28, 29, 31, 32, 34], "drop_last": [28, 29, 31, 32, 34], "num_work": [28, 29, 31, 32, 34], "seed": [28, 29, 31, 32, 34, 52, 53, 54, 55, 56, 57, 58, 59, 60], "343": [28, 29, 31, 32, 34, 52, 53, 54, 55, 56, 57, 58, 59, 60], "prefetch_factor": [28, 29, 31, 32, 34], "pin_memori": [28, 29, 31, 32, 34], "persistent_work": [28, 29, 31, 32, 34], "num_prefetch": [28, 29, 31, 32, 34], "dataload": [28, 50], "loader": [28, 49, 50], "set_id": 28, "valu": [28, 52, 57], "lowercasestrenum": [28, 52], "enumer": [28, 52], "worker_id": 28, "64": 31, "is_only_one_pair_per_subject": 31, "use_balanced_sampl": [31, 34], "use_separate_augment": 31, "only_label": 31, "task_id": [31, 34], "unlabelled_as_class": 31, "mni152_t1_3mm_brain_mask_dil_cubic192": 31, "nii": [31, 34], "gz": [31, 34], "target_sourc": [31, 32, 34], "only_data": 31, "templat": [31, 34], "end": 31, "degre": 32, "45": [32, 34], "kei": [32, 61], "test_ukbiobank_mp": [34, 35], "test_ukbiobank_mp_ram": [34, 35], "test_ukbiobank_ram": [34, 35], "skip_sourc": 34, "std": 34, "randomtransform": 34, "intensitytransform": 34, "static": 34, "ndarrai": 34, "space": 34, "std_physic": 34, "std_rang": 34, "9": 34, "test_mod": 34, "max_std_blur": 34, "p_blur": 34, "users1": 34, "xinhui": 34, "cpac_dl": 34, "avg152t1_gray_bin": 34, "f": 34, "52": 34, "m": 34, "53": 34, "59": 34, "4": 34, "60": 34, "66": 34, "6": 34, "67": 34, "73": 34, "7": 34, "8": 34, "74": 34, "80": 34, "max_datapoints_per_class": 34, "10000": 34, "num_matching_random_permut": 34, "30": 34, "config": [36, 52, 53, 54, 55, 56, 57, 58, 59, 60], "dictconfig": [36, 52, 53, 54, 55, 56, 57, 58, 59, 60], "testa": [37, 38, 39], "generate_gradi": [37, 46], "hook_first_lay": [37, 46], "architecture_param": [37, 38, 40, 45, 47], "source_id": [37, 42, 43, 46], "latent_head_param": [38, 40, 45], "result": [38, 47], "conv_head_param": [40, 45], "freez": 43, "one_source_mod": 45, "saliency_n_it": 46, "saliency_mean": 46, "saliency_std": 46, "saliency_use_relu": 46, "batch": [46, 49, 50], "input_imag": 46, "target_dim": 46, "propag": 47, "epoch": [49, 50], "handle_batch": [49, 50], "on_loader_end": [49, 50], "on_loader_start": [49, 50], "predict_batch": [49, 50], "train_batch_id": [49, 50], "valid_batch_id": [49, 50], "valid_loss": [49, 50], "batch_metr": [49, 50], "batch_step": [49, 50], "callback": [49, 50], "engin": [49, 50], "epoch_metr": [49, 50], "epoch_step": [49, 50], "except": [49, 50], "experiment_metr": [49, 50], "is_infer_load": [49, 50], "is_train_load": [49, 50], "is_valid_load": [49, 50], "loader_batch_len": [49, 50], "loader_batch_s": [49, 50], "loader_batch_step": [49, 50], "loader_kei": [49, 50], "loader_metr": [49, 50], "loader_sample_len": [49, 50], "loader_sample_step": [49, 50], "logger": [49, 50], "need_early_stop": [49, 50], "sample_step": [49, 50], "arg": [50, 52], "handler": 50, "runnercriterion": 50, "ilogg": 50, "runnermodel": 50, "runneroptim": 50, "runnerschedul": 50, "criterion_config": [52, 57, 58], "dataset_config": [52, 58], "model_config": [52, 53, 54, 55, 57, 58, 59, 60], "optimizer_config": [52, 55, 57, 58], "runner_config": [52, 58, 59], "scheduler_config": [52, 55, 57, 58], "task_build": 52, "launch": [53, 54, 55, 57, 58, 59, 60], "linear": [53, 54, 55, 57, 59, 60], "evalu": [53, 54, 55, 56, 57, 59, 60], "add": [53, 54, 55, 57, 58, 59, 60], "new": [53, 54, 55, 56, 57, 58, 59, 60], "logist": [53, 54, 56, 57, 59], "regress": [53, 54, 56, 57, 59], "metric_nam": 57, "sequenc": 57, "idx": 61, "instal": [62, 66], "guid": [62, 66], "exampl": [62, 66], "tutori": [62, 66]}, "objects": {"fusion.architecture": [[1, 0, 0, "-", "abasearchitecture"], [1, 0, 0, "-", "architecture_provider"]], "fusion.architecture.abasearchitecture": [[1, 1, 1, "", "ABaseArchitecture"]], "fusion.architecture.abasearchitecture.ABaseArchitecture": [[1, 2, 1, "", "get_layers"], [1, 2, 1, "", "init_weights"], [1, 3, 1, "", "training"]], "fusion.architecture.alexnet": [[2, 0, 0, "-", "alexnet_encoder"], [2, 0, 0, "-", "anees_alexnet"]], "fusion.architecture.alexnet.alexnet_encoder": [[2, 1, 1, "", "AlexNetEncoder"]], "fusion.architecture.alexnet.alexnet_encoder.AlexNetEncoder": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "init_weights"], [2, 3, 1, "", "training"]], "fusion.architecture.alexnet.anees_alexnet": [[2, 1, 1, "", "AneesAlexNet"]], "fusion.architecture.alexnet.anees_alexnet.AneesAlexNet": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "init_weights"], [2, 3, 1, "", "training"]], "fusion.architecture.alexnet.tests": [[3, 0, 0, "-", "test_alexnet_encoder"], [3, 0, 0, "-", "test_anees_alexnet"]], "fusion.architecture.alexnet.tests.test_alexnet_encoder": [[3, 1, 1, "", "TestAlexNetEncoder"]], "fusion.architecture.alexnet.tests.test_alexnet_encoder.TestAlexNetEncoder": [[3, 2, 1, "", "test_forward"]], "fusion.architecture.alexnet.tests.test_anees_alexnet": [[3, 1, 1, "", "TestAlexNetEncoder"]], "fusion.architecture.alexnet.tests.test_anees_alexnet.TestAlexNetEncoder": [[3, 2, 1, "", "test_forward"]], "fusion.architecture.base_block": [[4, 0, 0, "-", "base_conv_layer"], [4, 0, 0, "-", "utils"]], "fusion.architecture.base_block.base_conv_layer": [[4, 1, 1, "", "BaseConvLayer"]], "fusion.architecture.base_block.base_conv_layer.BaseConvLayer": [[4, 2, 1, "", "forward"], [4, 2, 1, "", "init_weights"], [4, 3, 1, "", "training"]], "fusion.architecture.base_block.tests": [[5, 0, 0, "-", "test_base_conv_layer"]], "fusion.architecture.base_block.tests.test_base_conv_layer": [[5, 1, 1, "", "TestBaseConvLayer"]], "fusion.architecture.base_block.tests.test_base_conv_layer.TestBaseConvLayer": [[5, 2, 1, "", "test_forward"]], "fusion.architecture.base_block.utils": [[4, 1, 1, "", "Flatten"], [4, 1, 1, "", "Unflatten"]], "fusion.architecture.base_block.utils.Flatten": [[4, 2, 1, "", "forward"], [4, 3, 1, "", "training"]], "fusion.architecture.base_block.utils.Unflatten": [[4, 2, 1, "", "forward"], [4, 3, 1, "", "training"]], "fusion.architecture.dcgan": [[6, 0, 0, "-", "dcgan_autoencoder"], [6, 0, 0, "-", "dcgan_decoder"], [6, 0, 0, "-", "dcgan_encoder"]], "fusion.architecture.dcgan.dcgan_autoencoder": [[6, 1, 1, "", "DcganAutoEncoder"]], "fusion.architecture.dcgan.dcgan_autoencoder.DcganAutoEncoder": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "init_weights"], [6, 3, 1, "", "training"]], "fusion.architecture.dcgan.dcgan_decoder": [[6, 1, 1, "", "DcganDecoder"]], "fusion.architecture.dcgan.dcgan_decoder.DcganDecoder": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "init_weights"], [6, 3, 1, "", "training"]], "fusion.architecture.dcgan.dcgan_encoder": [[6, 1, 1, "", "DcganEncoder"]], "fusion.architecture.dcgan.dcgan_encoder.DcganEncoder": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "init_weights"], [6, 3, 1, "", "training"]], "fusion.architecture.dcgan.tests": [[7, 0, 0, "-", "test_dcgan_autoencoder"], [7, 0, 0, "-", "test_dcgan_decoder"], [7, 0, 0, "-", "test_dcgan_encoder"]], "fusion.architecture.dcgan.tests.test_dcgan_autoencoder": [[7, 1, 1, "", "TestDcganAutoEncoder"]], "fusion.architecture.dcgan.tests.test_dcgan_autoencoder.TestDcganAutoEncoder": [[7, 2, 1, "", "test_forward"]], "fusion.architecture.dcgan.tests.test_dcgan_decoder": [[7, 1, 1, "", "TestDcganDecoder"]], "fusion.architecture.dcgan.tests.test_dcgan_decoder.TestDcganDecoder": [[7, 2, 1, "", "test_forward"]], "fusion.architecture.dcgan.tests.test_dcgan_encoder": [[7, 1, 1, "", "TestDcganEncoder"]], "fusion.architecture.dcgan.tests.test_dcgan_encoder.TestDcganEncoder": [[7, 2, 1, "", "test_forward"]], "fusion.architecture.projection_head": [[8, 0, 0, "-", "conv_head"], [8, 0, 0, "-", "latent_head"]], "fusion.architecture.projection_head.conv_head": [[8, 1, 1, "", "ConvHead"]], "fusion.architecture.projection_head.conv_head.ConvHead": [[8, 2, 1, "", "forward"], [8, 2, 1, "", "init_weights"], [8, 3, 1, "", "training"]], "fusion.architecture.projection_head.latent_head": [[8, 1, 1, "", "LatentHead"]], "fusion.architecture.projection_head.latent_head.LatentHead": [[8, 2, 1, "", "forward"], [8, 2, 1, "", "init_weights"], [8, 3, 1, "", "training"]], "fusion.architecture.projection_head.tests": [[9, 0, 0, "-", "test_conv_head"], [9, 0, 0, "-", "test_latent_head"]], "fusion.architecture.projection_head.tests.test_conv_head": [[9, 1, 1, "", "TestConvHead"]], "fusion.architecture.projection_head.tests.test_conv_head.TestConvHead": [[9, 2, 1, "", "test_forward"]], "fusion.architecture.projection_head.tests.test_latent_head": [[9, 1, 1, "", "TestLatentHead"]], "fusion.architecture.projection_head.tests.test_latent_head.TestLatentHead": [[9, 2, 1, "", "test_forward"]], "fusion.criterion": [[10, 0, 0, "-", "criterion_provider"]], "fusion.criterion.loss": [[11, 0, 0, "-", "abaseloss"], [11, 0, 0, "-", "ae"], [11, 0, 0, "-", "cr_cca"], [11, 0, 0, "-", "dccae"], [11, 0, 0, "-", "multi_dim"], [11, 0, 0, "-", "pixl"], [11, 0, 0, "-", "pytorch_wrappers"], [11, 0, 0, "-", "rr_ae"], [11, 0, 0, "-", "supcon"], [11, 0, 0, "-", "supcon_dim"]], "fusion.criterion.loss.abaseloss": [[11, 1, 1, "", "ABaseLoss"]], "fusion.criterion.loss.abaseloss.ABaseLoss": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.ae": [[11, 1, 1, "", "AE"]], "fusion.criterion.loss.ae.AE": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.cr_cca": [[11, 1, 1, "", "CR_CCA"], [11, 4, 1, "", "choose_multi_dim"]], "fusion.criterion.loss.cr_cca.CR_CCA": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.dccae": [[11, 1, 1, "", "DCCAE"]], "fusion.criterion.loss.dccae.DCCAE": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.dim": [[12, 0, 0, "-", "base_dim"], [12, 0, 0, "-", "cc_dim"], [12, 0, 0, "-", "cr_dim"], [12, 0, 0, "-", "rr_dim"], [12, 0, 0, "-", "xx_dim"]], "fusion.criterion.loss.dim.base_dim": [[12, 1, 1, "", "BaseDim"]], "fusion.criterion.loss.dim.cc_dim": [[12, 1, 1, "", "CcDim"]], "fusion.criterion.loss.dim.cr_dim": [[12, 1, 1, "", "CrDim"]], "fusion.criterion.loss.dim.rr_dim": [[12, 1, 1, "", "RrDim"]], "fusion.criterion.loss.dim.tests": [[13, 0, 0, "-", "test_dim"]], "fusion.criterion.loss.dim.tests.test_dim": [[13, 1, 1, "", "TestDim"]], "fusion.criterion.loss.dim.tests.test_dim.TestDim": [[13, 2, 1, "", "test_cc_dim"], [13, 2, 1, "", "test_cr_dim"], [13, 2, 1, "", "test_rr_dim"], [13, 2, 1, "", "test_xx_dim"]], "fusion.criterion.loss.dim.xx_dim": [[12, 1, 1, "", "XxDim"]], "fusion.criterion.loss.multi_dim": [[11, 1, 1, "", "MultiDim"], [11, 1, 1, "", "SpatialMultiDim"], [11, 1, 1, "", "VolumetricMultiDim"]], "fusion.criterion.loss.multi_dim.MultiDim": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.multi_dim.SpatialMultiDim": [[11, 3, 1, "", "training"]], "fusion.criterion.loss.multi_dim.VolumetricMultiDim": [[11, 3, 1, "", "training"]], "fusion.criterion.loss.pixl": [[11, 1, 1, "", "PIXL"]], "fusion.criterion.loss.pixl.PIXL": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.pytorch_wrappers": [[11, 1, 1, "", "BCEWithLogitsLoss"], [11, 1, 1, "", "CustomCrossEntropyLoss"]], "fusion.criterion.loss.pytorch_wrappers.BCEWithLogitsLoss": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.pytorch_wrappers.CustomCrossEntropyLoss": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.rr_ae": [[11, 1, 1, "", "RR_AE"]], "fusion.criterion.loss.rr_ae.RR_AE": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.supcon": [[11, 1, 1, "", "SupCon"], [11, 1, 1, "", "SupConLoss"]], "fusion.criterion.loss.supcon.SupCon": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.supcon.SupConLoss": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.supcon_dim": [[11, 1, 1, "", "SupConDim"], [11, 1, 1, "", "SupConLoss"]], "fusion.criterion.loss.supcon_dim.SupConDim": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.supcon_dim.SupConLoss": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "fusion.criterion.loss.tests": [[14, 0, 0, "-", "test_cr_cca"], [14, 0, 0, "-", "test_dccae"], [14, 0, 0, "-", "test_rr_ae"], [14, 0, 0, "-", "test_spatial_multi_dim"], [14, 0, 0, "-", "test_volumetric_multi_dim"]], "fusion.criterion.loss.tests.test_cr_cca": [[14, 1, 1, "", "TestSpatialMultiDim"]], "fusion.criterion.loss.tests.test_cr_cca.TestSpatialMultiDim": [[14, 2, 1, "", "test_cr_cca"]], "fusion.criterion.loss.tests.test_dccae": [[14, 1, 1, "", "TestDCCAE"]], "fusion.criterion.loss.tests.test_dccae.TestDCCAE": [[14, 2, 1, "", "test_dccae"]], "fusion.criterion.loss.tests.test_rr_ae": [[14, 1, 1, "", "TestSpatialMultiDim"]], "fusion.criterion.loss.tests.test_rr_ae.TestSpatialMultiDim": [[14, 2, 1, "", "test_rr_ae"]], "fusion.criterion.loss.tests.test_spatial_multi_dim": [[14, 1, 1, "", "TestSpatialMultiDim"]], "fusion.criterion.loss.tests.test_spatial_multi_dim.TestSpatialMultiDim": [[14, 2, 1, "", "test_spatial_multi_dim"]], "fusion.criterion.loss.tests.test_volumetric_multi_dim": [[14, 1, 1, "", "TestSpatialMultiDim"]], "fusion.criterion.loss.tests.test_volumetric_multi_dim.TestSpatialMultiDim": [[14, 2, 1, "", "test_spatial_multi_dim"]], "fusion.criterion.mi_estimator": [[15, 0, 0, "-", "base_mi_estimator"], [15, 0, 0, "-", "fenchel_dual"], [15, 0, 0, "-", "infonce"]], "fusion.criterion.mi_estimator.base_mi_estimator": [[15, 1, 1, "", "ABaseMIEstimator"]], "fusion.criterion.mi_estimator.clip": [[16, 0, 0, "-", "base_clip"], [16, 0, 0, "-", "tahn_clip"]], "fusion.criterion.mi_estimator.clip.base_clip": [[16, 1, 1, "", "ABaseClip"]], "fusion.criterion.mi_estimator.clip.base_clip.ABaseClip": [[16, 5, 1, "", "clip_value"]], "fusion.criterion.mi_estimator.clip.tahn_clip": [[16, 1, 1, "", "TahnClip"]], "fusion.criterion.mi_estimator.clip.tests": [[17, 0, 0, "-", "test_clips"]], "fusion.criterion.mi_estimator.clip.tests.test_clips": [[17, 1, 1, "", "TestClips"]], "fusion.criterion.mi_estimator.clip.tests.test_clips.TestClips": [[17, 2, 1, "", "test_tahn_clip"]], "fusion.criterion.mi_estimator.critic": [[18, 0, 0, "-", "base_critic"], [18, 0, 0, "-", "separable_critic"]], "fusion.criterion.mi_estimator.critic.base_critic": [[18, 1, 1, "", "ABaseCritic"]], "fusion.criterion.mi_estimator.critic.separable_critic": [[18, 1, 1, "", "CosineSimilarity"], [18, 1, 1, "", "ScaledDotProduct"], [18, 1, 1, "", "SeparableCritic"]], "fusion.criterion.mi_estimator.critic.tests": [[19, 0, 0, "-", "test_separable_critics"]], "fusion.criterion.mi_estimator.critic.tests.test_separable_critics": [[19, 1, 1, "", "TestSeparableCritics"]], "fusion.criterion.mi_estimator.critic.tests.test_separable_critics.TestSeparableCritics": [[19, 2, 1, "", "test_cosine_similarity"], [19, 2, 1, "", "test_scaled_dot_product"]], "fusion.criterion.mi_estimator.fenchel_dual": [[15, 1, 1, "", "FenchelDualEstimator"]], "fusion.criterion.mi_estimator.infonce": [[15, 1, 1, "", "InfoNceEstimator"]], "fusion.criterion.mi_estimator.measure": [[20, 0, 0, "-", "base_measure"]], "fusion.criterion.mi_estimator.measure.base_measure": [[20, 1, 1, "", "ABaseMeasure"], [20, 1, 1, "", "DVMeasure"], [20, 1, 1, "", "GanMeasure"], [20, 1, 1, "", "H2Measure"], [20, 1, 1, "", "JsdMeasure"], [20, 1, 1, "", "KLMeasure"], [20, 1, 1, "", "RKLMeasure"], [20, 1, 1, "", "W1Measure"], [20, 1, 1, "", "X2Measure"], [20, 4, 1, "", "log_sum_exp"]], "fusion.criterion.mi_estimator.measure.base_measure.ABaseMeasure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.DVMeasure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.GanMeasure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.H2Measure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.JsdMeasure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.KLMeasure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.RKLMeasure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.W1Measure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.measure.base_measure.X2Measure": [[20, 2, 1, "", "get_negative_expectation"], [20, 2, 1, "", "get_positive_expectation"]], "fusion.criterion.mi_estimator.penalty": [[21, 0, 0, "-", "base_penalty"], [21, 0, 0, "-", "l2_penalty"]], "fusion.criterion.mi_estimator.penalty.base_penalty": [[21, 1, 1, "", "ABasePenalty"]], "fusion.criterion.mi_estimator.penalty.l2_penalty": [[21, 1, 1, "", "L2Penalty"]], "fusion.criterion.mi_estimator.penalty.tests": [[22, 0, 0, "-", "test_penalties"]], "fusion.criterion.mi_estimator.penalty.tests.test_penalties": [[22, 1, 1, "", "TestPenalties"]], "fusion.criterion.mi_estimator.penalty.tests.test_penalties.TestPenalties": [[22, 2, 1, "", "test_l2_penalty"]], "fusion.criterion.mi_estimator.tests": [[23, 0, 0, "-", "test_estimators"]], "fusion.criterion.mi_estimator.tests.test_estimators": [[23, 1, 1, "", "TestMIEstimators"]], "fusion.criterion.mi_estimator.tests.test_estimators.TestMIEstimators": [[23, 2, 1, "", "test_fenchel_dual"], [23, 2, 1, "", "test_infonce_estimator"]], "fusion.criterion.misc.cca": [[25, 0, 0, "-", "canonical_correlation"]], "fusion.criterion.misc.cca.canonical_correlation": [[25, 1, 1, "", "CanonicalCorrelation"]], "fusion.criterion.misc.cca.canonical_correlation.CanonicalCorrelation": [[25, 2, 1, "", "forward"], [25, 3, 1, "", "training"]], "fusion.criterion.misc.cca.tests": [[26, 0, 0, "-", "test_canonical_correlation"]], "fusion.criterion.misc.cca.tests.test_canonical_correlation": [[26, 1, 1, "", "TestCanonicalCorrelation"]], "fusion.criterion.misc.cca.tests.test_canonical_correlation.TestCanonicalCorrelation": [[26, 2, 1, "", "test_canonincal_correlation"]], "fusion.criterion.misc": [[24, 0, 0, "-", "utils"]], "fusion.criterion.misc.utils": [[24, 4, 1, "", "total_loss_summation"]], "fusion.dataset": [[28, 0, 0, "-", "abasedataset"], [28, 0, 0, "-", "abasetransform"], [28, 0, 0, "-", "dataset_provider"], [28, 0, 0, "-", "misc"], [28, 0, 0, "-", "utils"]], "fusion.dataset.abasedataset": [[28, 1, 1, "", "ABaseDataset"]], "fusion.dataset.abasedataset.ABaseDataset": [[28, 2, 1, "", "get_all_loaders"], [28, 2, 1, "", "get_cv_loaders"], [28, 2, 1, "", "get_loader"], [28, 2, 1, "", "load"], [28, 5, 1, "", "num_classes"]], "fusion.dataset.abasetransform": [[28, 1, 1, "", "ABaseTransform"]], "fusion.dataset.misc": [[28, 1, 1, "", "SetId"]], "fusion.dataset.misc.SetId": [[28, 3, 1, "", "INFER"], [28, 3, 1, "", "TEST"], [28, 3, 1, "", "TRAIN"], [28, 3, 1, "", "VALID"]], "fusion.dataset.mnist_svhn": [[29, 0, 0, "-", "mnist_svhn"], [29, 0, 0, "-", "transforms"]], "fusion.dataset.mnist_svhn.mnist_svhn": [[29, 1, 1, "", "MnistSvhn"]], "fusion.dataset.mnist_svhn.mnist_svhn.MnistSvhn": [[29, 2, 1, "", "load"]], "fusion.dataset.mnist_svhn.tests": [[30, 0, 0, "-", "test_mnist_svhn"]], "fusion.dataset.mnist_svhn.tests.test_mnist_svhn": [[30, 1, 1, "", "TestMnistSvhn"]], "fusion.dataset.mnist_svhn.tests.test_mnist_svhn.TestMnistSvhn": [[30, 2, 1, "", "test_mnist_svhn"]], "fusion.dataset.mnist_svhn.transforms": [[29, 1, 1, "", "MNISTTransform"], [29, 1, 1, "", "SVHNTransform"]], "fusion.dataset.oasis": [[31, 0, 0, "-", "oasis"], [31, 0, 0, "-", "transforms"]], "fusion.dataset.oasis.oasis": [[31, 1, 1, "", "Oasis"]], "fusion.dataset.oasis.oasis.Oasis": [[31, 2, 1, "", "affine"], [31, 2, 1, "", "header"], [31, 2, 1, "", "load"], [31, 5, 1, "", "mask"], [31, 2, 1, "", "orientation"]], "fusion.dataset.oasis.transforms": [[31, 1, 1, "", "MNIMaskTransform"], [31, 1, 1, "", "VolumetricRandomCrop"]], "fusion.dataset.oasis.transforms.MNIMaskTransform": [[31, 2, 1, "", "apply_transform"], [31, 2, 1, "", "process_volume"]], "fusion.dataset.oasis.transforms.VolumetricRandomCrop": [[31, 2, 1, "", "apply_transform"], [31, 2, 1, "", "process_volume"]], "fusion.dataset.two_view_mnist.tests": [[33, 0, 0, "-", "test_two_view_mnist"]], "fusion.dataset.two_view_mnist.tests.test_two_view_mnist": [[33, 1, 1, "", "TestTwoViewMnist"]], "fusion.dataset.two_view_mnist.tests.test_two_view_mnist.TestTwoViewMnist": [[33, 2, 1, "", "test_two_view_mnist"]], "fusion.dataset.two_view_mnist": [[32, 0, 0, "-", "transforms"], [32, 0, 0, "-", "two_view_mnist"]], "fusion.dataset.two_view_mnist.transforms": [[32, 1, 1, "", "RandomRotation"], [32, 1, 1, "", "RandomRotationTransform"], [32, 1, 1, "", "TwoViewMnistTransform"], [32, 1, 1, "", "UniformNoise"], [32, 1, 1, "", "UniformNoiseTransform"], [32, 1, 1, "", "UnitIntervalScale"]], "fusion.dataset.two_view_mnist.two_view_mnist": [[32, 1, 1, "", "TwoViewMnist"]], "fusion.dataset.two_view_mnist.two_view_mnist.TwoViewMnist": [[32, 2, 1, "", "load"]], "fusion.dataset.ukbiobank.tests": [[35, 0, 0, "-", "test_ukbiobank"]], "fusion.dataset.ukbiobank.tests.test_ukbiobank": [[35, 1, 1, "", "TestUKBioBank"]], "fusion.dataset.ukbiobank.tests.test_ukbiobank.TestUKBioBank": [[35, 2, 1, "", "test_ukbiobank"], [35, 2, 1, "", "test_ukbiobank_mp"], [35, 2, 1, "", "test_ukbiobank_mp_ram"], [35, 2, 1, "", "test_ukbiobank_ram"]], "fusion.dataset.ukbiobank": [[34, 0, 0, "-", "transforms"], [34, 0, 0, "-", "ukbiobank"], [34, 0, 0, "-", "ukbiobank_agp"], [34, 0, 0, "-", "ukbiobank_mp"], [34, 0, 0, "-", "ukbiobank_mp_ram"], [34, 0, 0, "-", "ukbiobank_ram"]], "fusion.dataset.ukbiobank.transforms": [[34, 1, 1, "", "CustomRandomBlur"]], "fusion.dataset.ukbiobank.transforms.CustomRandomBlur": [[34, 2, 1, "", "apply_blur"], [34, 2, 1, "", "apply_transform"], [34, 2, 1, "", "blur"], [34, 2, 1, "", "get_params"]], "fusion.dataset.ukbiobank.ukbiobank": [[34, 1, 1, "", "UKBioBank"]], "fusion.dataset.ukbiobank.ukbiobank.UKBioBank": [[34, 3, 1, "", "label_2_name"], [34, 2, 1, "", "load"]], "fusion.dataset.ukbiobank.ukbiobank_agp": [[34, 1, 1, "", "UKBioBankAGP"]], "fusion.dataset.ukbiobank.ukbiobank_mp": [[34, 1, 1, "", "UKBioBankMP"]], "fusion.dataset.ukbiobank.ukbiobank_mp_ram": [[34, 1, 1, "", "UKBioBankMPRAM"]], "fusion.dataset.ukbiobank.ukbiobank_ram": [[34, 1, 1, "", "UKBioBankRAM"]], "fusion.dataset.utils": [[28, 4, 1, "", "seed_worker"]], "fusion.experiment": [[36, 0, 0, "-", "experiment"]], "fusion.experiment.experiment": [[36, 1, 1, "", "Experiment"]], "fusion.experiment.experiment.Experiment": [[36, 2, 1, "", "setup_new_experiment"], [36, 2, 1, "", "start"]], "fusion.model": [[37, 0, 0, "-", "abasemodel"], [37, 0, 0, "-", "model_provider"]], "fusion.model.abasemodel": [[37, 1, 1, "", "ABaseModel"]], "fusion.model.abasemodel.ABaseModel": [[37, 2, 1, "", "get_encoder"], [37, 2, 1, "", "get_encoder_list"], [37, 3, 1, "", "training"]], "fusion.model.ae": [[38, 0, 0, "-", "ae"]], "fusion.model.ae.ae": [[38, 1, 1, "", "AE"]], "fusion.model.ae.ae.AE": [[38, 2, 1, "", "forward"], [38, 3, 1, "", "training"]], "fusion.model.ae.tests": [[39, 0, 0, "-", "test_ae"]], "fusion.model.ae.tests.test_ae": [[39, 1, 1, "", "TestAE"]], "fusion.model.ae.tests.test_ae.TestAE": [[39, 2, 1, "", "test_forward"]], "fusion.model.dim": [[40, 0, 0, "-", "dim"]], "fusion.model.dim.dim": [[40, 1, 1, "", "Dim"]], "fusion.model.dim.dim.Dim": [[40, 2, 1, "", "forward"], [40, 3, 1, "", "training"]], "fusion.model.dim.tests": [[41, 0, 0, "-", "test_dim"]], "fusion.model.dim.tests.test_dim": [[41, 1, 1, "", "TestDim"]], "fusion.model.dim.tests.test_dim.TestDim": [[41, 2, 1, "", "test_forward"]], "fusion.model.encoder_extractor": [[42, 0, 0, "-", "encoder_extractor"]], "fusion.model.encoder_extractor.encoder_extractor": [[42, 1, 1, "", "EncoderExtractor"]], "fusion.model.encoder_extractor.encoder_extractor.EncoderExtractor": [[42, 2, 1, "", "forward"], [42, 3, 1, "", "training"]], "fusion.model.linear_evaluator": [[43, 0, 0, "-", "linear_evaluator"]], "fusion.model.linear_evaluator.linear_evaluator": [[43, 1, 1, "", "LinearEvaluator"]], "fusion.model.linear_evaluator.linear_evaluator.LinearEvaluator": [[43, 2, 1, "", "forward"], [43, 3, 1, "", "training"]], "fusion.model.pixl": [[45, 0, 0, "-", "pixl"]], "fusion.model.pixl.pixl": [[45, 1, 1, "", "PIXL"]], "fusion.model.pixl.pixl.PIXL": [[45, 2, 1, "", "forward"], [45, 2, 1, "", "get_encoder_list"], [45, 3, 1, "", "training"]], "fusion.model.saliency": [[46, 0, 0, "-", "smoothgrad"]], "fusion.model.saliency.smoothgrad": [[46, 1, 1, "", "SmoothVanillaBackprop"]], "fusion.model.saliency.smoothgrad.SmoothVanillaBackprop": [[46, 2, 1, "", "forward"], [46, 2, 1, "", "generate_gradients"], [46, 2, 1, "", "hook_first_layer"]], "fusion.model.supervised": [[47, 0, 0, "-", "supervised"]], "fusion.model.supervised.supervised": [[47, 1, 1, "", "Supervised"]], "fusion.model.supervised.supervised.Supervised": [[47, 2, 1, "", "forward"], [47, 3, 1, "", "training"]], "fusion.optimizer": [[48, 0, 0, "-", "optimizer_provider"]], "fusion.runner": [[49, 0, 0, "-", "abaserunner"], [49, 0, 0, "-", "runner_provider"]], "fusion.runner.abaserunner": [[49, 1, 1, "", "ABaseRunner"]], "fusion.runner.catalyst": [[50, 0, 0, "-", "catalyst_runner"], [50, 0, 0, "-", "mnist_svhn_runner"], [50, 0, 0, "-", "oasis_runner"]], "fusion.runner.catalyst.catalyst_runner": [[50, 1, 1, "", "CatalystRunner"]], "fusion.runner.catalyst.catalyst_runner.CatalystRunner": [[50, 3, 1, "", "epoch"], [50, 2, 1, "", "get_loaders"], [50, 2, 1, "", "handle_batch"], [50, 2, 1, "", "on_loader_end"], [50, 2, 1, "", "on_loader_start"], [50, 2, 1, "", "predict_batch"], [50, 3, 1, "", "train_batch_id"], [50, 3, 1, "", "valid_batch_id"], [50, 3, 1, "", "valid_loss"]], "fusion.runner.catalyst.mnist_svhn_runner": [[50, 1, 1, "", "MnistSvhnRunner"]], "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner": [[50, 3, 1, "", "batch"], [50, 3, 1, "", "batch_metrics"], [50, 3, 1, "", "batch_size"], [50, 3, 1, "", "batch_step"], [50, 3, 1, "", "callbacks"], [50, 3, 1, "", "criterion"], [50, 3, 1, "", "engine"], [50, 3, 1, "", "epoch_metrics"], [50, 3, 1, "", "epoch_step"], [50, 3, 1, "", "exception"], [50, 3, 1, "", "experiment_metrics"], [50, 3, 1, "", "is_infer_loader"], [50, 3, 1, "", "is_train_loader"], [50, 3, 1, "", "is_valid_loader"], [50, 3, 1, "", "loader"], [50, 3, 1, "", "loader_batch_len"], [50, 3, 1, "", "loader_batch_size"], [50, 3, 1, "", "loader_batch_step"], [50, 3, 1, "", "loader_key"], [50, 3, 1, "", "loader_metrics"], [50, 3, 1, "", "loader_sample_len"], [50, 3, 1, "", "loader_sample_step"], [50, 3, 1, "", "loaders"], [50, 3, 1, "", "loggers"], [50, 3, 1, "", "model"], [50, 3, 1, "", "need_early_stop"], [50, 3, 1, "", "optimizer"], [50, 3, 1, "", "sample_step"], [50, 3, 1, "", "scheduler"]], "fusion.runner.catalyst.oasis_runner": [[50, 1, 1, "", "OasisRunner"]], "fusion.runner.catalyst.oasis_runner.OasisRunner": [[50, 3, 1, "", "batch"], [50, 3, 1, "", "batch_metrics"], [50, 3, 1, "", "batch_size"], [50, 3, 1, "", "batch_step"], [50, 3, 1, "", "callbacks"], [50, 3, 1, "", "criterion"], [50, 3, 1, "", "engine"], [50, 3, 1, "", "epoch_metrics"], [50, 3, 1, "", "epoch_step"], [50, 3, 1, "", "exception"], [50, 3, 1, "", "experiment_metrics"], [50, 3, 1, "", "is_infer_loader"], [50, 3, 1, "", "is_train_loader"], [50, 3, 1, "", "is_valid_loader"], [50, 3, 1, "", "loader"], [50, 3, 1, "", "loader_batch_len"], [50, 3, 1, "", "loader_batch_size"], [50, 3, 1, "", "loader_batch_step"], [50, 3, 1, "", "loader_key"], [50, 3, 1, "", "loader_metrics"], [50, 3, 1, "", "loader_sample_len"], [50, 3, 1, "", "loader_sample_step"], [50, 3, 1, "", "loaders"], [50, 3, 1, "", "loggers"], [50, 3, 1, "", "model"], [50, 3, 1, "", "need_early_stop"], [50, 3, 1, "", "optimizer"], [50, 3, 1, "", "sample_step"], [50, 3, 1, "", "scheduler"]], "fusion.scheduler": [[51, 0, 0, "-", "scheduler_provider"]], "fusion.task": [[52, 0, 0, "-", "atask"], [52, 0, 0, "-", "misc"], [52, 0, 0, "-", "task_builder_provider"]], "fusion.task.atask": [[52, 1, 1, "", "ATask"], [52, 1, 1, "", "ATaskBuilder"], [52, 1, 1, "", "TaskDirector"]], "fusion.task.atask.ATask": [[52, 5, 1, "", "criterion"], [52, 5, 1, "", "dataset"], [52, 5, 1, "", "model"], [52, 5, 1, "", "optimizer"], [52, 2, 1, "", "run"], [52, 5, 1, "", "runner"], [52, 5, 1, "", "scheduler"], [52, 5, 1, "", "task_args"]], "fusion.task.atask.ATaskBuilder": [[52, 2, 1, "", "add_criterion"], [52, 2, 1, "", "add_dataset"], [52, 2, 1, "", "add_model"], [52, 2, 1, "", "add_optimizer"], [52, 2, 1, "", "add_runner"], [52, 2, 1, "", "add_scheduler"], [52, 2, 1, "", "create_new_task"], [52, 5, 1, "", "task"]], "fusion.task.atask.TaskDirector": [[52, 2, 1, "", "construct_task"], [52, 2, 1, "", "get_task"]], "fusion.task.feature_extraction": [[53, 0, 0, "-", "feature_extraction_task"]], "fusion.task.feature_extraction.feature_extraction_task": [[53, 1, 1, "", "FeatureExtractionTask"], [53, 1, 1, "", "FeatureExtractionTaskBuilder"]], "fusion.task.feature_extraction.feature_extraction_task.FeatureExtractionTask": [[53, 2, 1, "", "run"]], "fusion.task.feature_extraction.feature_extraction_task.FeatureExtractionTaskBuilder": [[53, 2, 1, "", "add_model"], [53, 2, 1, "", "create_new_task"]], "fusion.task.inference": [[54, 0, 0, "-", "inference_task"]], "fusion.task.inference.inference_task": [[54, 1, 1, "", "InferenceTask"], [54, 1, 1, "", "InferenceTaskBuilder"]], "fusion.task.inference.inference_task.InferenceTask": [[54, 2, 1, "", "run"]], "fusion.task.inference.inference_task.InferenceTaskBuilder": [[54, 2, 1, "", "add_model"], [54, 2, 1, "", "create_new_task"]], "fusion.task.linear_evaluation": [[55, 0, 0, "-", "linear_evaluation_task"]], "fusion.task.linear_evaluation.linear_evaluation_task": [[55, 1, 1, "", "LinearEvaluationTask"], [55, 1, 1, "", "LinearEvaluationTaskBuilder"]], "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTask": [[55, 2, 1, "", "run"]], "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTaskBuilder": [[55, 2, 1, "", "add_model"], [55, 2, 1, "", "add_optimizer"], [55, 2, 1, "", "add_scheduler"], [55, 2, 1, "", "create_new_task"]], "fusion.task.logits_extraction": [[56, 0, 0, "-", "logits_extraction_task"]], "fusion.task.logits_extraction.logits_extraction_task": [[56, 1, 1, "", "LogitsExtractionTask"], [56, 1, 1, "", "LogitsExtractionTaskBuilder"]], "fusion.task.logits_extraction.logits_extraction_task.LogitsExtractionTask": [[56, 2, 1, "", "run"]], "fusion.task.logits_extraction.logits_extraction_task.LogitsExtractionTaskBuilder": [[56, 2, 1, "", "create_new_task"]], "fusion.task.logreg_evaluation": [[57, 0, 0, "-", "logreg_evaluation_task"]], "fusion.task.logreg_evaluation.logreg_evaluation_task": [[57, 1, 1, "", "CustomWeightsAndBiasesCallback"], [57, 1, 1, "", "LogRegEvaluationTask"], [57, 1, 1, "", "LogRegEvaluationTaskBuilder"]], "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTask": [[57, 2, 1, "", "run"]], "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTaskBuilder": [[57, 2, 1, "", "add_criterion"], [57, 2, 1, "", "add_model"], [57, 2, 1, "", "add_optimizer"], [57, 2, 1, "", "add_scheduler"], [57, 2, 1, "", "create_new_task"]], "fusion.task.misc": [[52, 1, 1, "", "TaskId"]], "fusion.task.misc.TaskId": [[52, 3, 1, "", "FEATURE_EXTRACTION"], [52, 3, 1, "", "INFERENCE"], [52, 3, 1, "", "LINEAR_EVALUATION"], [52, 3, 1, "", "LOGITS_EXTRACTION"], [52, 3, 1, "", "LOGREG_EVALUATION"], [52, 3, 1, "", "PRETRAINING"], [52, 3, 1, "", "SALIENCY"], [52, 3, 1, "", "TSNE"]], "fusion.task.pretraining": [[58, 0, 0, "-", "pretraining_task"]], "fusion.task.pretraining.pretraining_task": [[58, 1, 1, "", "PretrainingTask"], [58, 1, 1, "", "PretrainingTaskBuilder"]], "fusion.task.pretraining.pretraining_task.PretrainingTask": [[58, 2, 1, "", "run"]], "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder": [[58, 2, 1, "", "add_criterion"], [58, 2, 1, "", "add_dataset"], [58, 2, 1, "", "add_model"], [58, 2, 1, "", "add_optimizer"], [58, 2, 1, "", "add_runner"], [58, 2, 1, "", "add_scheduler"], [58, 2, 1, "", "create_new_task"]], "fusion.task.saliency": [[59, 0, 0, "-", "saliency"]], "fusion.task.saliency.saliency": [[59, 1, 1, "", "SaliencyTask"], [59, 1, 1, "", "SaliencyTaskBuilder"]], "fusion.task.saliency.saliency.SaliencyTask": [[59, 2, 1, "", "run"]], "fusion.task.saliency.saliency.SaliencyTaskBuilder": [[59, 2, 1, "", "add_model"], [59, 2, 1, "", "add_runner"], [59, 2, 1, "", "create_new_task"]], "fusion.task.tsne": [[60, 0, 0, "-", "tsne_task"]], "fusion.task.tsne.tsne_task": [[60, 1, 1, "", "TsneTask"], [60, 1, 1, "", "TsneTaskBuilder"]], "fusion.task.tsne.tsne_task.TsneTask": [[60, 2, 1, "", "run"]], "fusion.task.tsne.tsne_task.TsneTaskBuilder": [[60, 2, 1, "", "add_model"], [60, 2, 1, "", "create_new_task"]], "fusion.utils": [[61, 0, 0, "-", "object_provider"]], "fusion.utils.object_provider": [[61, 1, 1, "", "Factory"], [61, 1, 1, "", "ObjectProvider"]], "fusion.utils.object_provider.Factory": [[61, 2, 1, "", "create"], [61, 2, 1, "", "register_object"]], "fusion.utils.object_provider.ObjectProvider": [[61, 2, 1, "", "get"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"fusion": [0, 66], "architectur": 1, "abasearchitectur": 1, "architecture_provid": 1, "alexnet": 2, "alexnet_encod": 2, "anees_alexnet": 2, "test": [3, 5, 7, 9, 13, 14, 17, 19, 22, 23, 26, 30, 33, 35, 39, 41], "test_alexnet_encod": 3, "test_anees_alexnet": 3, "base_block": 4, "base_conv_lay": 4, "util": [4, 24, 28, 61], "test_base_conv_lay": 5, "dcgan": 6, "dcgan_autoencod": 6, "dcgan_decod": 6, "dcgan_encod": 6, "test_dcgan_autoencod": 7, "test_dcgan_decod": 7, "test_dcgan_encod": 7, "projection_head": 8, "conv_head": 8, "modul": [8, 9], "latent_head": 8, "test_conv_head": 9, "test_latent_head": 9, "criterion": 10, "criterion_provid": 10, "loss": 11, "abaseloss": 11, "ae": [11, 38], "cr_cca": 11, "dccae": 11, "multi_dim": 11, "pixl": [11, 45], "pytorch_wrapp": 11, "rr_ae": 11, "supcon": 11, "supcon_dim": 11, "dim": [12, 40], "base_dim": 12, "cc_dim": 12, "cr_dim": 12, "rr_dim": 12, "xx_dim": 12, "test_dim": [13, 41], "test_cr_cca": 14, "test_dcca": 14, "test_rr_a": 14, "test_spatial_multi_dim": 14, "test_volumetric_multi_dim": 14, "mi_estim": 15, "base_mi_estim": 15, "fenchel_du": 15, "infonc": 15, "clip": 16, "base_clip": 16, "tahn_clip": 16, "test_clip": 17, "critic": 18, "base_crit": 18, "separable_crit": 18, "test_separable_crit": 19, "measur": 20, "base_measur": 20, "penalti": 21, "base_penalti": 21, "l2_penalti": 21, "test_penalti": 22, "test_estim": 23, "misc": [24, 28, 44, 52], "cca": 25, "packag": [25, 54], "canonical_correl": 25, "test_canonical_correl": 26, "mmvae": 27, "dataset": 28, "abasedataset": 28, "abasetransform": 28, "dataset_provid": 28, "mnist_svhn": 29, "transform": [29, 31, 32, 34], "test_mnist_svhn": 30, "oasi": 31, "two_view_mnist": 32, "test_two_view_mnist": 33, "ukbiobank": 34, "ukbiobank_agp": 34, "ukbiobank_mp": 34, "ukbiobank_mp_ram": 34, "ukbiobank_ram": 34, "test_ukbiobank": 35, "experi": 36, "model": 37, "abasemodel": 37, "model_provid": 37, "test_a": 39, "encoder_extractor": 42, "linear_evalu": [43, 55], "salienc": [46, 59], "smoothgrad": 46, "supervis": 47, "optim": 48, "optimizer_provid": 48, "runner": 49, "abaserunn": 49, "runner_provid": 49, "catalyst": 50, "catalyst_runn": 50, "mnist_svhn_runn": 50, "oasis_runn": 50, "schedul": 51, "scheduler_provid": 51, "task": 52, "atask": 52, "task_builder_provid": 52, "feature_extract": 53, "feature_extraction_task": 53, "infer": 54, "inference_task": 54, "linear_evaluation_task": 55, "logits_extract": 56, "logits_extraction_task": 56, "logreg_evalu": 57, "logreg_evaluation_task": 57, "pretrain": 58, "pretraining_task": 58, "tsne": 60, "tsne_task": 60, "object_provid": 61, "get": 62, "start": 62, "exampl": 63, "instal": 64, "guid": 64, "tutori": 65, "welcom": 66, "": 66, "document": 66, "content": 66}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"fusion": [[0, "fusion"]], "architecture": [[1, "architecture"]], "abasearchitecture": [[1, "module-fusion.architecture.abasearchitecture"]], "architecture_provider": [[1, "module-fusion.architecture.architecture_provider"]], "alexnet": [[2, "alexnet"]], "alexnet_encoder": [[2, "module-fusion.architecture.alexnet.alexnet_encoder"]], "anees_alexnet": [[2, "module-fusion.architecture.alexnet.anees_alexnet"]], "tests": [[3, "tests"], [5, "tests"], [7, "tests"], [9, "tests"], [13, "tests"], [14, "tests"], [17, "tests"], [19, "tests"], [22, "tests"], [23, "tests"], [26, "tests"], [30, "tests"], [33, "tests"], [35, "tests"], [39, "tests"], [41, "tests"]], "test_alexnet_encoder": [[3, "module-fusion.architecture.alexnet.tests.test_alexnet_encoder"]], "test_anees_alexnet": [[3, "module-fusion.architecture.alexnet.tests.test_anees_alexnet"]], "base_block": [[4, "base-block"]], "base_conv_layer": [[4, "module-fusion.architecture.base_block.base_conv_layer"]], "utils": [[4, "module-fusion.architecture.base_block.utils"], [24, "module-fusion.criterion.misc.utils"], [28, "module-fusion.dataset.utils"], [61, "utils"]], "test_base_conv_layer": [[5, "module-fusion.architecture.base_block.tests.test_base_conv_layer"]], "dcgan": [[6, "dcgan"]], "dcgan_autoencoder": [[6, "module-fusion.architecture.dcgan.dcgan_autoencoder"]], "dcgan_decoder": [[6, "module-fusion.architecture.dcgan.dcgan_decoder"]], "dcgan_encoder": [[6, "module-fusion.architecture.dcgan.dcgan_encoder"]], "test_dcgan_autoencoder": [[7, "module-fusion.architecture.dcgan.tests.test_dcgan_autoencoder"]], "test_dcgan_decoder": [[7, "module-fusion.architecture.dcgan.tests.test_dcgan_decoder"]], "test_dcgan_encoder": [[7, "module-fusion.architecture.dcgan.tests.test_dcgan_encoder"]], "projection_head": [[8, "projection-head"]], "conv_head module": [[8, "module-fusion.architecture.projection_head.conv_head"]], "latent_head module": [[8, "module-fusion.architecture.projection_head.latent_head"]], "test_conv_head module": [[9, "module-fusion.architecture.projection_head.tests.test_conv_head"]], "test_latent_head module": [[9, "module-fusion.architecture.projection_head.tests.test_latent_head"]], "criterion": [[10, "criterion"]], "criterion_provider": [[10, "module-fusion.criterion.criterion_provider"]], "loss": [[11, "loss"]], "abaseloss": [[11, "module-fusion.criterion.loss.abaseloss"]], "ae": [[11, "module-fusion.criterion.loss.ae"], [38, "ae"], [38, "id1"]], "cr_cca": [[11, "module-fusion.criterion.loss.cr_cca"]], "dccae": [[11, "module-fusion.criterion.loss.dccae"]], "multi_dim": [[11, "module-fusion.criterion.loss.multi_dim"]], "pixl": [[11, "module-fusion.criterion.loss.pixl"], [45, "pixl"], [45, "id1"]], "pytorch_wrappers": [[11, "module-fusion.criterion.loss.pytorch_wrappers"]], "rr_ae": [[11, "module-fusion.criterion.loss.rr_ae"]], "supcon": [[11, "module-fusion.criterion.loss.supcon"]], "supcon_dim": [[11, "module-fusion.criterion.loss.supcon_dim"]], "dim": [[12, "dim"], [40, "dim"], [40, "id1"]], "base_dim": [[12, "module-fusion.criterion.loss.dim.base_dim"]], "cc_dim": [[12, "module-fusion.criterion.loss.dim.cc_dim"]], "cr_dim": [[12, "module-fusion.criterion.loss.dim.cr_dim"]], "rr_dim": [[12, "module-fusion.criterion.loss.dim.rr_dim"]], "xx_dim": [[12, "module-fusion.criterion.loss.dim.xx_dim"]], "test_dim": [[13, "module-fusion.criterion.loss.dim.tests.test_dim"], [41, "module-fusion.model.dim.tests.test_dim"]], "test_cr_cca": [[14, "module-fusion.criterion.loss.tests.test_cr_cca"]], "test_dccae": [[14, "module-fusion.criterion.loss.tests.test_dccae"]], "test_rr_ae": [[14, "module-fusion.criterion.loss.tests.test_rr_ae"]], "test_spatial_multi_dim": [[14, "module-fusion.criterion.loss.tests.test_spatial_multi_dim"]], "test_volumetric_multi_dim": [[14, "module-fusion.criterion.loss.tests.test_volumetric_multi_dim"]], "mi_estimator": [[15, "mi-estimator"]], "base_mi_estimator": [[15, "module-fusion.criterion.mi_estimator.base_mi_estimator"]], "fenchel_dual": [[15, "module-fusion.criterion.mi_estimator.fenchel_dual"]], "infonce": [[15, "module-fusion.criterion.mi_estimator.infonce"]], "clip": [[16, "clip"]], "base_clip": [[16, "module-fusion.criterion.mi_estimator.clip.base_clip"]], "tahn_clip": [[16, "module-fusion.criterion.mi_estimator.clip.tahn_clip"]], "test_clips": [[17, "module-fusion.criterion.mi_estimator.clip.tests.test_clips"]], "critic": [[18, "critic"]], "base_critic": [[18, "module-fusion.criterion.mi_estimator.critic.base_critic"]], "separable_critic": [[18, "module-fusion.criterion.mi_estimator.critic.separable_critic"]], "test_separable_critics": [[19, "module-fusion.criterion.mi_estimator.critic.tests.test_separable_critics"]], "measure": [[20, "measure"]], "base_measure": [[20, "module-fusion.criterion.mi_estimator.measure.base_measure"]], "penalty": [[21, "penalty"]], "base_penalty": [[21, "module-fusion.criterion.mi_estimator.penalty.base_penalty"]], "l2_penalty": [[21, "module-fusion.criterion.mi_estimator.penalty.l2_penalty"]], "test_penalties": [[22, "module-fusion.criterion.mi_estimator.penalty.tests.test_penalties"]], "test_estimators": [[23, "module-fusion.criterion.mi_estimator.tests.test_estimators"]], "misc": [[24, "misc"], [28, "module-fusion.dataset.misc"], [44, "misc"], [52, "module-fusion.task.misc"]], "cca package": [[25, "cca-package"]], "canonical_correlation": [[25, "module-fusion.criterion.misc.cca.canonical_correlation"]], "test_canonical_correlation": [[26, "module-fusion.criterion.misc.cca.tests.test_canonical_correlation"]], "mmvae": [[27, "mmvae"]], "dataset": [[28, "dataset"]], "abasedataset": [[28, "module-fusion.dataset.abasedataset"]], "abasetransform": [[28, "module-fusion.dataset.abasetransform"]], "dataset_provider": [[28, "module-fusion.dataset.dataset_provider"]], "mnist_svhn": [[29, "mnist-svhn"], [29, "id1"]], "transforms": [[29, "module-fusion.dataset.mnist_svhn.transforms"], [31, "module-fusion.dataset.oasis.transforms"], [32, "module-fusion.dataset.two_view_mnist.transforms"], [34, "module-fusion.dataset.ukbiobank.transforms"]], "test_mnist_svhn": [[30, "module-fusion.dataset.mnist_svhn.tests.test_mnist_svhn"]], "oasis": [[31, "oasis"], [31, "id1"]], "two_view_mnist": [[32, "two-view-mnist"], [32, "id1"]], "test_two_view_mnist": [[33, "module-fusion.dataset.two_view_mnist.tests.test_two_view_mnist"]], "ukbiobank": [[34, "ukbiobank"], [34, "id1"]], "ukbiobank_agp": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_agp"]], "ukbiobank_mp": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_mp"]], "ukbiobank_mp_ram": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_mp_ram"]], "ukbiobank_ram": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_ram"]], "test_ukbiobank": [[35, "module-fusion.dataset.ukbiobank.tests.test_ukbiobank"]], "experiment": [[36, "experiment"], [36, "id1"]], "model": [[37, "model"]], "abasemodel": [[37, "module-fusion.model.abasemodel"]], "model_provider": [[37, "module-fusion.model.model_provider"]], "test_ae": [[39, "module-fusion.model.ae.tests.test_ae"]], "encoder_extractor": [[42, "encoder-extractor"], [42, "id1"]], "linear_evaluator": [[43, "linear-evaluator"], [43, "id1"]], "saliency": [[46, "saliency"], [59, "saliency"], [59, "id1"]], "smoothgrad": [[46, "module-fusion.model.saliency.smoothgrad"]], "supervised": [[47, "supervised"], [47, "id1"]], "optimizer": [[48, "optimizer"]], "optimizer_provider": [[48, "module-fusion.optimizer.optimizer_provider"]], "runner": [[49, "runner"]], "abaserunner": [[49, "module-fusion.runner.abaserunner"]], "runner_provider": [[49, "module-fusion.runner.runner_provider"]], "catalyst": [[50, "catalyst"]], "catalyst_runner": [[50, "module-fusion.runner.catalyst.catalyst_runner"]], "mnist_svhn_runner": [[50, "module-fusion.runner.catalyst.mnist_svhn_runner"]], "oasis_runner": [[50, "module-fusion.runner.catalyst.oasis_runner"]], "scheduler": [[51, "scheduler"]], "scheduler_provider": [[51, "module-fusion.scheduler.scheduler_provider"]], "task": [[52, "task"]], "atask": [[52, "module-fusion.task.atask"]], "task_builder_provider": [[52, "module-fusion.task.task_builder_provider"]], "feature_extraction": [[53, "feature-extraction"]], "feature_extraction_task": [[53, "module-fusion.task.feature_extraction.feature_extraction_task"]], "inference package": [[54, "inference-package"]], "inference_task": [[54, "module-fusion.task.inference.inference_task"]], "linear_evaluation": [[55, "linear-evaluation"]], "linear_evaluation_task": [[55, "module-fusion.task.linear_evaluation.linear_evaluation_task"]], "logits_extraction": [[56, "logits-extraction"]], "logits_extraction_task": [[56, "module-fusion.task.logits_extraction.logits_extraction_task"]], "logreg_evaluation": [[57, "logreg-evaluation"]], "logreg_evaluation_task": [[57, "module-fusion.task.logreg_evaluation.logreg_evaluation_task"]], "pretraining": [[58, "pretraining"]], "pretraining_task": [[58, "module-fusion.task.pretraining.pretraining_task"]], "tsne": [[60, "tsne"]], "tsne_task": [[60, "module-fusion.task.tsne.tsne_task"]], "object_provider": [[61, "module-fusion.utils.object_provider"]], "Getting Started": [[62, "getting-started"]], "Examples": [[63, "examples"]], "Installation Guide": [[64, "installation-guide"]], "Tutorials": [[65, "tutorials"]], "Welcome to fusion\u2019s documentation!": [[66, "welcome-to-fusion-s-documentation"]], "Contents:": [[66, null]]}, "indexentries": {"abasearchitecture (class in fusion.architecture.abasearchitecture)": [[1, "fusion.architecture.abasearchitecture.ABaseArchitecture"]], "fusion.architecture.abasearchitecture": [[1, "module-fusion.architecture.abasearchitecture"]], "fusion.architecture.architecture_provider": [[1, "module-fusion.architecture.architecture_provider"]], "get_layers() (fusion.architecture.abasearchitecture.abasearchitecture method)": [[1, "fusion.architecture.abasearchitecture.ABaseArchitecture.get_layers"]], "init_weights() (fusion.architecture.abasearchitecture.abasearchitecture method)": [[1, "fusion.architecture.abasearchitecture.ABaseArchitecture.init_weights"]], "module": [[1, "module-fusion.architecture.abasearchitecture"], [1, "module-fusion.architecture.architecture_provider"], [2, "module-fusion.architecture.alexnet.alexnet_encoder"], [2, "module-fusion.architecture.alexnet.anees_alexnet"], [3, "module-fusion.architecture.alexnet.tests.test_alexnet_encoder"], [3, "module-fusion.architecture.alexnet.tests.test_anees_alexnet"], [4, "module-fusion.architecture.base_block.base_conv_layer"], [4, "module-fusion.architecture.base_block.utils"], [5, "module-fusion.architecture.base_block.tests.test_base_conv_layer"], [6, "module-fusion.architecture.dcgan.dcgan_autoencoder"], [6, "module-fusion.architecture.dcgan.dcgan_decoder"], [6, "module-fusion.architecture.dcgan.dcgan_encoder"], [7, "module-fusion.architecture.dcgan.tests.test_dcgan_autoencoder"], [7, "module-fusion.architecture.dcgan.tests.test_dcgan_decoder"], [7, "module-fusion.architecture.dcgan.tests.test_dcgan_encoder"], [8, "module-fusion.architecture.projection_head.conv_head"], [8, "module-fusion.architecture.projection_head.latent_head"], [9, "module-fusion.architecture.projection_head.tests.test_conv_head"], [9, "module-fusion.architecture.projection_head.tests.test_latent_head"], [10, "module-fusion.criterion.criterion_provider"], [11, "module-fusion.criterion.loss.abaseloss"], [11, "module-fusion.criterion.loss.ae"], [11, "module-fusion.criterion.loss.cr_cca"], [11, "module-fusion.criterion.loss.dccae"], [11, "module-fusion.criterion.loss.multi_dim"], [11, "module-fusion.criterion.loss.pixl"], [11, "module-fusion.criterion.loss.pytorch_wrappers"], [11, "module-fusion.criterion.loss.rr_ae"], [11, "module-fusion.criterion.loss.supcon"], [11, "module-fusion.criterion.loss.supcon_dim"], [12, "module-fusion.criterion.loss.dim.base_dim"], [12, "module-fusion.criterion.loss.dim.cc_dim"], [12, "module-fusion.criterion.loss.dim.cr_dim"], [12, "module-fusion.criterion.loss.dim.rr_dim"], [12, "module-fusion.criterion.loss.dim.xx_dim"], [13, "module-fusion.criterion.loss.dim.tests.test_dim"], [14, "module-fusion.criterion.loss.tests.test_cr_cca"], [14, "module-fusion.criterion.loss.tests.test_dccae"], [14, "module-fusion.criterion.loss.tests.test_rr_ae"], [14, "module-fusion.criterion.loss.tests.test_spatial_multi_dim"], [14, "module-fusion.criterion.loss.tests.test_volumetric_multi_dim"], [15, "module-fusion.criterion.mi_estimator.base_mi_estimator"], [15, "module-fusion.criterion.mi_estimator.fenchel_dual"], [15, "module-fusion.criterion.mi_estimator.infonce"], [16, "module-fusion.criterion.mi_estimator.clip.base_clip"], [16, "module-fusion.criterion.mi_estimator.clip.tahn_clip"], [17, "module-fusion.criterion.mi_estimator.clip.tests.test_clips"], [18, "module-fusion.criterion.mi_estimator.critic.base_critic"], [18, "module-fusion.criterion.mi_estimator.critic.separable_critic"], [19, "module-fusion.criterion.mi_estimator.critic.tests.test_separable_critics"], [20, "module-fusion.criterion.mi_estimator.measure.base_measure"], [21, "module-fusion.criterion.mi_estimator.penalty.base_penalty"], [21, "module-fusion.criterion.mi_estimator.penalty.l2_penalty"], [22, "module-fusion.criterion.mi_estimator.penalty.tests.test_penalties"], [23, "module-fusion.criterion.mi_estimator.tests.test_estimators"], [24, "module-fusion.criterion.misc.utils"], [25, "module-fusion.criterion.misc.cca.canonical_correlation"], [26, "module-fusion.criterion.misc.cca.tests.test_canonical_correlation"], [28, "module-fusion.dataset.abasedataset"], [28, "module-fusion.dataset.abasetransform"], [28, "module-fusion.dataset.dataset_provider"], [28, "module-fusion.dataset.misc"], [28, "module-fusion.dataset.utils"], [29, "module-fusion.dataset.mnist_svhn.mnist_svhn"], [29, "module-fusion.dataset.mnist_svhn.transforms"], [30, "module-fusion.dataset.mnist_svhn.tests.test_mnist_svhn"], [31, "module-fusion.dataset.oasis.oasis"], [31, "module-fusion.dataset.oasis.transforms"], [32, "module-fusion.dataset.two_view_mnist.transforms"], [32, "module-fusion.dataset.two_view_mnist.two_view_mnist"], [33, "module-fusion.dataset.two_view_mnist.tests.test_two_view_mnist"], [34, "module-fusion.dataset.ukbiobank.transforms"], [34, "module-fusion.dataset.ukbiobank.ukbiobank"], [34, "module-fusion.dataset.ukbiobank.ukbiobank_agp"], [34, "module-fusion.dataset.ukbiobank.ukbiobank_mp"], [34, "module-fusion.dataset.ukbiobank.ukbiobank_mp_ram"], [34, "module-fusion.dataset.ukbiobank.ukbiobank_ram"], [35, "module-fusion.dataset.ukbiobank.tests.test_ukbiobank"], [36, "module-fusion.experiment.experiment"], [37, "module-fusion.model.abasemodel"], [37, "module-fusion.model.model_provider"], [38, "module-fusion.model.ae.ae"], [39, "module-fusion.model.ae.tests.test_ae"], [40, "module-fusion.model.dim.dim"], [41, "module-fusion.model.dim.tests.test_dim"], [42, "module-fusion.model.encoder_extractor.encoder_extractor"], [43, "module-fusion.model.linear_evaluator.linear_evaluator"], [45, "module-fusion.model.pixl.pixl"], [46, "module-fusion.model.saliency.smoothgrad"], [47, "module-fusion.model.supervised.supervised"], [48, "module-fusion.optimizer.optimizer_provider"], [49, "module-fusion.runner.abaserunner"], [49, "module-fusion.runner.runner_provider"], [50, "module-fusion.runner.catalyst.catalyst_runner"], [50, "module-fusion.runner.catalyst.mnist_svhn_runner"], [50, "module-fusion.runner.catalyst.oasis_runner"], [51, "module-fusion.scheduler.scheduler_provider"], [52, "module-fusion.task.atask"], [52, "module-fusion.task.misc"], [52, "module-fusion.task.task_builder_provider"], [53, "module-fusion.task.feature_extraction.feature_extraction_task"], [54, "module-fusion.task.inference.inference_task"], [55, "module-fusion.task.linear_evaluation.linear_evaluation_task"], [56, "module-fusion.task.logits_extraction.logits_extraction_task"], [57, "module-fusion.task.logreg_evaluation.logreg_evaluation_task"], [58, "module-fusion.task.pretraining.pretraining_task"], [59, "module-fusion.task.saliency.saliency"], [60, "module-fusion.task.tsne.tsne_task"], [61, "module-fusion.utils.object_provider"]], "training (fusion.architecture.abasearchitecture.abasearchitecture attribute)": [[1, "fusion.architecture.abasearchitecture.ABaseArchitecture.training"]], "alexnetencoder (class in fusion.architecture.alexnet.alexnet_encoder)": [[2, "fusion.architecture.alexnet.alexnet_encoder.AlexNetEncoder"]], "aneesalexnet (class in fusion.architecture.alexnet.anees_alexnet)": [[2, "fusion.architecture.alexnet.anees_alexnet.AneesAlexNet"]], "forward() (fusion.architecture.alexnet.alexnet_encoder.alexnetencoder method)": [[2, "fusion.architecture.alexnet.alexnet_encoder.AlexNetEncoder.forward"]], "forward() (fusion.architecture.alexnet.anees_alexnet.aneesalexnet method)": [[2, "fusion.architecture.alexnet.anees_alexnet.AneesAlexNet.forward"]], "fusion.architecture.alexnet.alexnet_encoder": [[2, "module-fusion.architecture.alexnet.alexnet_encoder"]], "fusion.architecture.alexnet.anees_alexnet": [[2, "module-fusion.architecture.alexnet.anees_alexnet"]], "init_weights() (fusion.architecture.alexnet.alexnet_encoder.alexnetencoder method)": [[2, "fusion.architecture.alexnet.alexnet_encoder.AlexNetEncoder.init_weights"]], "init_weights() (fusion.architecture.alexnet.anees_alexnet.aneesalexnet method)": [[2, "fusion.architecture.alexnet.anees_alexnet.AneesAlexNet.init_weights"]], "training (fusion.architecture.alexnet.alexnet_encoder.alexnetencoder attribute)": [[2, "fusion.architecture.alexnet.alexnet_encoder.AlexNetEncoder.training"]], "training (fusion.architecture.alexnet.anees_alexnet.aneesalexnet attribute)": [[2, "fusion.architecture.alexnet.anees_alexnet.AneesAlexNet.training"]], "testalexnetencoder (class in fusion.architecture.alexnet.tests.test_alexnet_encoder)": [[3, "fusion.architecture.alexnet.tests.test_alexnet_encoder.TestAlexNetEncoder"]], "testalexnetencoder (class in fusion.architecture.alexnet.tests.test_anees_alexnet)": [[3, "fusion.architecture.alexnet.tests.test_anees_alexnet.TestAlexNetEncoder"]], "fusion.architecture.alexnet.tests.test_alexnet_encoder": [[3, "module-fusion.architecture.alexnet.tests.test_alexnet_encoder"]], "fusion.architecture.alexnet.tests.test_anees_alexnet": [[3, "module-fusion.architecture.alexnet.tests.test_anees_alexnet"]], "test_forward() (fusion.architecture.alexnet.tests.test_alexnet_encoder.testalexnetencoder method)": [[3, "fusion.architecture.alexnet.tests.test_alexnet_encoder.TestAlexNetEncoder.test_forward"]], "test_forward() (fusion.architecture.alexnet.tests.test_anees_alexnet.testalexnetencoder method)": [[3, "fusion.architecture.alexnet.tests.test_anees_alexnet.TestAlexNetEncoder.test_forward"]], "baseconvlayer (class in fusion.architecture.base_block.base_conv_layer)": [[4, "fusion.architecture.base_block.base_conv_layer.BaseConvLayer"]], "flatten (class in fusion.architecture.base_block.utils)": [[4, "fusion.architecture.base_block.utils.Flatten"]], "unflatten (class in fusion.architecture.base_block.utils)": [[4, "fusion.architecture.base_block.utils.Unflatten"]], "forward() (fusion.architecture.base_block.base_conv_layer.baseconvlayer method)": [[4, "fusion.architecture.base_block.base_conv_layer.BaseConvLayer.forward"]], "forward() (fusion.architecture.base_block.utils.flatten method)": [[4, "fusion.architecture.base_block.utils.Flatten.forward"]], "forward() (fusion.architecture.base_block.utils.unflatten method)": [[4, "fusion.architecture.base_block.utils.Unflatten.forward"]], "fusion.architecture.base_block.base_conv_layer": [[4, "module-fusion.architecture.base_block.base_conv_layer"]], "fusion.architecture.base_block.utils": [[4, "module-fusion.architecture.base_block.utils"]], "init_weights() (fusion.architecture.base_block.base_conv_layer.baseconvlayer method)": [[4, "fusion.architecture.base_block.base_conv_layer.BaseConvLayer.init_weights"]], "training (fusion.architecture.base_block.base_conv_layer.baseconvlayer attribute)": [[4, "fusion.architecture.base_block.base_conv_layer.BaseConvLayer.training"]], "training (fusion.architecture.base_block.utils.flatten attribute)": [[4, "fusion.architecture.base_block.utils.Flatten.training"]], "training (fusion.architecture.base_block.utils.unflatten attribute)": [[4, "fusion.architecture.base_block.utils.Unflatten.training"]], "testbaseconvlayer (class in fusion.architecture.base_block.tests.test_base_conv_layer)": [[5, "fusion.architecture.base_block.tests.test_base_conv_layer.TestBaseConvLayer"]], "fusion.architecture.base_block.tests.test_base_conv_layer": [[5, "module-fusion.architecture.base_block.tests.test_base_conv_layer"]], "test_forward() (fusion.architecture.base_block.tests.test_base_conv_layer.testbaseconvlayer method)": [[5, "fusion.architecture.base_block.tests.test_base_conv_layer.TestBaseConvLayer.test_forward"]], "dcganautoencoder (class in fusion.architecture.dcgan.dcgan_autoencoder)": [[6, "fusion.architecture.dcgan.dcgan_autoencoder.DcganAutoEncoder"]], "dcgandecoder (class in fusion.architecture.dcgan.dcgan_decoder)": [[6, "fusion.architecture.dcgan.dcgan_decoder.DcganDecoder"]], "dcganencoder (class in fusion.architecture.dcgan.dcgan_encoder)": [[6, "fusion.architecture.dcgan.dcgan_encoder.DcganEncoder"]], "forward() (fusion.architecture.dcgan.dcgan_autoencoder.dcganautoencoder method)": [[6, "fusion.architecture.dcgan.dcgan_autoencoder.DcganAutoEncoder.forward"]], "forward() (fusion.architecture.dcgan.dcgan_decoder.dcgandecoder method)": [[6, "fusion.architecture.dcgan.dcgan_decoder.DcganDecoder.forward"]], "forward() (fusion.architecture.dcgan.dcgan_encoder.dcganencoder method)": [[6, "fusion.architecture.dcgan.dcgan_encoder.DcganEncoder.forward"]], "fusion.architecture.dcgan.dcgan_autoencoder": [[6, "module-fusion.architecture.dcgan.dcgan_autoencoder"]], "fusion.architecture.dcgan.dcgan_decoder": [[6, "module-fusion.architecture.dcgan.dcgan_decoder"]], "fusion.architecture.dcgan.dcgan_encoder": [[6, "module-fusion.architecture.dcgan.dcgan_encoder"]], "init_weights() (fusion.architecture.dcgan.dcgan_autoencoder.dcganautoencoder method)": [[6, "fusion.architecture.dcgan.dcgan_autoencoder.DcganAutoEncoder.init_weights"]], "init_weights() (fusion.architecture.dcgan.dcgan_decoder.dcgandecoder method)": [[6, "fusion.architecture.dcgan.dcgan_decoder.DcganDecoder.init_weights"]], "init_weights() (fusion.architecture.dcgan.dcgan_encoder.dcganencoder method)": [[6, "fusion.architecture.dcgan.dcgan_encoder.DcganEncoder.init_weights"]], "training (fusion.architecture.dcgan.dcgan_autoencoder.dcganautoencoder attribute)": [[6, "fusion.architecture.dcgan.dcgan_autoencoder.DcganAutoEncoder.training"]], "training (fusion.architecture.dcgan.dcgan_decoder.dcgandecoder attribute)": [[6, "fusion.architecture.dcgan.dcgan_decoder.DcganDecoder.training"]], "training (fusion.architecture.dcgan.dcgan_encoder.dcganencoder attribute)": [[6, "fusion.architecture.dcgan.dcgan_encoder.DcganEncoder.training"]], "testdcganautoencoder (class in fusion.architecture.dcgan.tests.test_dcgan_autoencoder)": [[7, "fusion.architecture.dcgan.tests.test_dcgan_autoencoder.TestDcganAutoEncoder"]], "testdcgandecoder (class in fusion.architecture.dcgan.tests.test_dcgan_decoder)": [[7, "fusion.architecture.dcgan.tests.test_dcgan_decoder.TestDcganDecoder"]], "testdcganencoder (class in fusion.architecture.dcgan.tests.test_dcgan_encoder)": [[7, "fusion.architecture.dcgan.tests.test_dcgan_encoder.TestDcganEncoder"]], "fusion.architecture.dcgan.tests.test_dcgan_autoencoder": [[7, "module-fusion.architecture.dcgan.tests.test_dcgan_autoencoder"]], "fusion.architecture.dcgan.tests.test_dcgan_decoder": [[7, "module-fusion.architecture.dcgan.tests.test_dcgan_decoder"]], "fusion.architecture.dcgan.tests.test_dcgan_encoder": [[7, "module-fusion.architecture.dcgan.tests.test_dcgan_encoder"]], "test_forward() (fusion.architecture.dcgan.tests.test_dcgan_autoencoder.testdcganautoencoder method)": [[7, "fusion.architecture.dcgan.tests.test_dcgan_autoencoder.TestDcganAutoEncoder.test_forward"]], "test_forward() (fusion.architecture.dcgan.tests.test_dcgan_decoder.testdcgandecoder method)": [[7, "fusion.architecture.dcgan.tests.test_dcgan_decoder.TestDcganDecoder.test_forward"]], "test_forward() (fusion.architecture.dcgan.tests.test_dcgan_encoder.testdcganencoder method)": [[7, "fusion.architecture.dcgan.tests.test_dcgan_encoder.TestDcganEncoder.test_forward"]], "convhead (class in fusion.architecture.projection_head.conv_head)": [[8, "fusion.architecture.projection_head.conv_head.ConvHead"]], "latenthead (class in fusion.architecture.projection_head.latent_head)": [[8, "fusion.architecture.projection_head.latent_head.LatentHead"]], "forward() (fusion.architecture.projection_head.conv_head.convhead method)": [[8, "fusion.architecture.projection_head.conv_head.ConvHead.forward"]], "forward() (fusion.architecture.projection_head.latent_head.latenthead method)": [[8, "fusion.architecture.projection_head.latent_head.LatentHead.forward"]], "fusion.architecture.projection_head.conv_head": [[8, "module-fusion.architecture.projection_head.conv_head"]], "fusion.architecture.projection_head.latent_head": [[8, "module-fusion.architecture.projection_head.latent_head"]], "init_weights() (fusion.architecture.projection_head.conv_head.convhead method)": [[8, "fusion.architecture.projection_head.conv_head.ConvHead.init_weights"]], "init_weights() (fusion.architecture.projection_head.latent_head.latenthead method)": [[8, "fusion.architecture.projection_head.latent_head.LatentHead.init_weights"]], "training (fusion.architecture.projection_head.conv_head.convhead attribute)": [[8, "fusion.architecture.projection_head.conv_head.ConvHead.training"]], "training (fusion.architecture.projection_head.latent_head.latenthead attribute)": [[8, "fusion.architecture.projection_head.latent_head.LatentHead.training"]], "testconvhead (class in fusion.architecture.projection_head.tests.test_conv_head)": [[9, "fusion.architecture.projection_head.tests.test_conv_head.TestConvHead"]], "testlatenthead (class in fusion.architecture.projection_head.tests.test_latent_head)": [[9, "fusion.architecture.projection_head.tests.test_latent_head.TestLatentHead"]], "fusion.architecture.projection_head.tests.test_conv_head": [[9, "module-fusion.architecture.projection_head.tests.test_conv_head"]], "fusion.architecture.projection_head.tests.test_latent_head": [[9, "module-fusion.architecture.projection_head.tests.test_latent_head"]], "test_forward() (fusion.architecture.projection_head.tests.test_conv_head.testconvhead method)": [[9, "fusion.architecture.projection_head.tests.test_conv_head.TestConvHead.test_forward"]], "test_forward() (fusion.architecture.projection_head.tests.test_latent_head.testlatenthead method)": [[9, "fusion.architecture.projection_head.tests.test_latent_head.TestLatentHead.test_forward"]], "fusion.criterion.criterion_provider": [[10, "module-fusion.criterion.criterion_provider"]], "abaseloss (class in fusion.criterion.loss.abaseloss)": [[11, "fusion.criterion.loss.abaseloss.ABaseLoss"]], "ae (class in fusion.criterion.loss.ae)": [[11, "fusion.criterion.loss.ae.AE"]], "bcewithlogitsloss (class in fusion.criterion.loss.pytorch_wrappers)": [[11, "fusion.criterion.loss.pytorch_wrappers.BCEWithLogitsLoss"]], "cr_cca (class in fusion.criterion.loss.cr_cca)": [[11, "fusion.criterion.loss.cr_cca.CR_CCA"]], "customcrossentropyloss (class in fusion.criterion.loss.pytorch_wrappers)": [[11, "fusion.criterion.loss.pytorch_wrappers.CustomCrossEntropyLoss"]], "dccae (class in fusion.criterion.loss.dccae)": [[11, "fusion.criterion.loss.dccae.DCCAE"]], "multidim (class in fusion.criterion.loss.multi_dim)": [[11, "fusion.criterion.loss.multi_dim.MultiDim"]], "pixl (class in fusion.criterion.loss.pixl)": [[11, "fusion.criterion.loss.pixl.PIXL"]], "rr_ae (class in fusion.criterion.loss.rr_ae)": [[11, "fusion.criterion.loss.rr_ae.RR_AE"]], "spatialmultidim (class in fusion.criterion.loss.multi_dim)": [[11, "fusion.criterion.loss.multi_dim.SpatialMultiDim"]], "supcon (class in fusion.criterion.loss.supcon)": [[11, "fusion.criterion.loss.supcon.SupCon"]], "supcondim (class in fusion.criterion.loss.supcon_dim)": [[11, "fusion.criterion.loss.supcon_dim.SupConDim"]], "supconloss (class in fusion.criterion.loss.supcon)": [[11, "fusion.criterion.loss.supcon.SupConLoss"]], "supconloss (class in fusion.criterion.loss.supcon_dim)": [[11, "fusion.criterion.loss.supcon_dim.SupConLoss"]], "volumetricmultidim (class in fusion.criterion.loss.multi_dim)": [[11, "fusion.criterion.loss.multi_dim.VolumetricMultiDim"]], "choose_multi_dim() (in module fusion.criterion.loss.cr_cca)": [[11, "fusion.criterion.loss.cr_cca.choose_multi_dim"]], "forward() (fusion.criterion.loss.abaseloss.abaseloss method)": [[11, "fusion.criterion.loss.abaseloss.ABaseLoss.forward"]], "forward() (fusion.criterion.loss.ae.ae method)": [[11, "fusion.criterion.loss.ae.AE.forward"]], "forward() (fusion.criterion.loss.cr_cca.cr_cca method)": [[11, "fusion.criterion.loss.cr_cca.CR_CCA.forward"]], "forward() (fusion.criterion.loss.dccae.dccae method)": [[11, "fusion.criterion.loss.dccae.DCCAE.forward"]], "forward() (fusion.criterion.loss.multi_dim.multidim method)": [[11, "fusion.criterion.loss.multi_dim.MultiDim.forward"]], "forward() (fusion.criterion.loss.pixl.pixl method)": [[11, "fusion.criterion.loss.pixl.PIXL.forward"]], "forward() (fusion.criterion.loss.pytorch_wrappers.bcewithlogitsloss method)": [[11, "fusion.criterion.loss.pytorch_wrappers.BCEWithLogitsLoss.forward"]], "forward() (fusion.criterion.loss.pytorch_wrappers.customcrossentropyloss method)": [[11, "fusion.criterion.loss.pytorch_wrappers.CustomCrossEntropyLoss.forward"]], "forward() (fusion.criterion.loss.rr_ae.rr_ae method)": [[11, "fusion.criterion.loss.rr_ae.RR_AE.forward"]], "forward() (fusion.criterion.loss.supcon.supcon method)": [[11, "fusion.criterion.loss.supcon.SupCon.forward"]], "forward() (fusion.criterion.loss.supcon.supconloss method)": [[11, "fusion.criterion.loss.supcon.SupConLoss.forward"]], "forward() (fusion.criterion.loss.supcon_dim.supcondim method)": [[11, "fusion.criterion.loss.supcon_dim.SupConDim.forward"]], "forward() (fusion.criterion.loss.supcon_dim.supconloss method)": [[11, "fusion.criterion.loss.supcon_dim.SupConLoss.forward"]], "fusion.criterion.loss.abaseloss": [[11, "module-fusion.criterion.loss.abaseloss"]], "fusion.criterion.loss.ae": [[11, "module-fusion.criterion.loss.ae"]], "fusion.criterion.loss.cr_cca": [[11, "module-fusion.criterion.loss.cr_cca"]], "fusion.criterion.loss.dccae": [[11, "module-fusion.criterion.loss.dccae"]], "fusion.criterion.loss.multi_dim": [[11, "module-fusion.criterion.loss.multi_dim"]], "fusion.criterion.loss.pixl": [[11, "module-fusion.criterion.loss.pixl"]], "fusion.criterion.loss.pytorch_wrappers": [[11, "module-fusion.criterion.loss.pytorch_wrappers"]], "fusion.criterion.loss.rr_ae": [[11, "module-fusion.criterion.loss.rr_ae"]], "fusion.criterion.loss.supcon": [[11, "module-fusion.criterion.loss.supcon"]], "fusion.criterion.loss.supcon_dim": [[11, "module-fusion.criterion.loss.supcon_dim"]], "training (fusion.criterion.loss.abaseloss.abaseloss attribute)": [[11, "fusion.criterion.loss.abaseloss.ABaseLoss.training"]], "training (fusion.criterion.loss.ae.ae attribute)": [[11, "fusion.criterion.loss.ae.AE.training"]], "training (fusion.criterion.loss.cr_cca.cr_cca attribute)": [[11, "fusion.criterion.loss.cr_cca.CR_CCA.training"]], "training (fusion.criterion.loss.dccae.dccae attribute)": [[11, "fusion.criterion.loss.dccae.DCCAE.training"]], "training (fusion.criterion.loss.multi_dim.multidim attribute)": [[11, "fusion.criterion.loss.multi_dim.MultiDim.training"]], "training (fusion.criterion.loss.multi_dim.spatialmultidim attribute)": [[11, "fusion.criterion.loss.multi_dim.SpatialMultiDim.training"]], "training (fusion.criterion.loss.multi_dim.volumetricmultidim attribute)": [[11, "fusion.criterion.loss.multi_dim.VolumetricMultiDim.training"]], "training (fusion.criterion.loss.pixl.pixl attribute)": [[11, "fusion.criterion.loss.pixl.PIXL.training"]], "training (fusion.criterion.loss.pytorch_wrappers.bcewithlogitsloss attribute)": [[11, "fusion.criterion.loss.pytorch_wrappers.BCEWithLogitsLoss.training"]], "training (fusion.criterion.loss.pytorch_wrappers.customcrossentropyloss attribute)": [[11, "fusion.criterion.loss.pytorch_wrappers.CustomCrossEntropyLoss.training"]], "training (fusion.criterion.loss.rr_ae.rr_ae attribute)": [[11, "fusion.criterion.loss.rr_ae.RR_AE.training"]], "training (fusion.criterion.loss.supcon.supcon attribute)": [[11, "fusion.criterion.loss.supcon.SupCon.training"]], "training (fusion.criterion.loss.supcon.supconloss attribute)": [[11, "fusion.criterion.loss.supcon.SupConLoss.training"]], "training (fusion.criterion.loss.supcon_dim.supcondim attribute)": [[11, "fusion.criterion.loss.supcon_dim.SupConDim.training"]], "training (fusion.criterion.loss.supcon_dim.supconloss attribute)": [[11, "fusion.criterion.loss.supcon_dim.SupConLoss.training"]], "basedim (class in fusion.criterion.loss.dim.base_dim)": [[12, "fusion.criterion.loss.dim.base_dim.BaseDim"]], "ccdim (class in fusion.criterion.loss.dim.cc_dim)": [[12, "fusion.criterion.loss.dim.cc_dim.CcDim"]], "crdim (class in fusion.criterion.loss.dim.cr_dim)": [[12, "fusion.criterion.loss.dim.cr_dim.CrDim"]], "rrdim (class in fusion.criterion.loss.dim.rr_dim)": [[12, "fusion.criterion.loss.dim.rr_dim.RrDim"]], "xxdim (class in fusion.criterion.loss.dim.xx_dim)": [[12, "fusion.criterion.loss.dim.xx_dim.XxDim"]], "fusion.criterion.loss.dim.base_dim": [[12, "module-fusion.criterion.loss.dim.base_dim"]], "fusion.criterion.loss.dim.cc_dim": [[12, "module-fusion.criterion.loss.dim.cc_dim"]], "fusion.criterion.loss.dim.cr_dim": [[12, "module-fusion.criterion.loss.dim.cr_dim"]], "fusion.criterion.loss.dim.rr_dim": [[12, "module-fusion.criterion.loss.dim.rr_dim"]], "fusion.criterion.loss.dim.xx_dim": [[12, "module-fusion.criterion.loss.dim.xx_dim"]], "testdim (class in fusion.criterion.loss.dim.tests.test_dim)": [[13, "fusion.criterion.loss.dim.tests.test_dim.TestDim"]], "fusion.criterion.loss.dim.tests.test_dim": [[13, "module-fusion.criterion.loss.dim.tests.test_dim"]], "test_cc_dim() (fusion.criterion.loss.dim.tests.test_dim.testdim method)": [[13, "fusion.criterion.loss.dim.tests.test_dim.TestDim.test_cc_dim"]], "test_cr_dim() (fusion.criterion.loss.dim.tests.test_dim.testdim method)": [[13, "fusion.criterion.loss.dim.tests.test_dim.TestDim.test_cr_dim"]], "test_rr_dim() (fusion.criterion.loss.dim.tests.test_dim.testdim method)": [[13, "fusion.criterion.loss.dim.tests.test_dim.TestDim.test_rr_dim"]], "test_xx_dim() (fusion.criterion.loss.dim.tests.test_dim.testdim method)": [[13, "fusion.criterion.loss.dim.tests.test_dim.TestDim.test_xx_dim"]], "testdccae (class in fusion.criterion.loss.tests.test_dccae)": [[14, "fusion.criterion.loss.tests.test_dccae.TestDCCAE"]], "testspatialmultidim (class in fusion.criterion.loss.tests.test_cr_cca)": [[14, "fusion.criterion.loss.tests.test_cr_cca.TestSpatialMultiDim"]], "testspatialmultidim (class in fusion.criterion.loss.tests.test_rr_ae)": [[14, "fusion.criterion.loss.tests.test_rr_ae.TestSpatialMultiDim"]], "testspatialmultidim (class in fusion.criterion.loss.tests.test_spatial_multi_dim)": [[14, "fusion.criterion.loss.tests.test_spatial_multi_dim.TestSpatialMultiDim"]], "testspatialmultidim (class in fusion.criterion.loss.tests.test_volumetric_multi_dim)": [[14, "fusion.criterion.loss.tests.test_volumetric_multi_dim.TestSpatialMultiDim"]], "fusion.criterion.loss.tests.test_cr_cca": [[14, "module-fusion.criterion.loss.tests.test_cr_cca"]], "fusion.criterion.loss.tests.test_dccae": [[14, "module-fusion.criterion.loss.tests.test_dccae"]], "fusion.criterion.loss.tests.test_rr_ae": [[14, "module-fusion.criterion.loss.tests.test_rr_ae"]], "fusion.criterion.loss.tests.test_spatial_multi_dim": [[14, "module-fusion.criterion.loss.tests.test_spatial_multi_dim"]], "fusion.criterion.loss.tests.test_volumetric_multi_dim": [[14, "module-fusion.criterion.loss.tests.test_volumetric_multi_dim"]], "test_cr_cca() (fusion.criterion.loss.tests.test_cr_cca.testspatialmultidim method)": [[14, "fusion.criterion.loss.tests.test_cr_cca.TestSpatialMultiDim.test_cr_cca"]], "test_dccae() (fusion.criterion.loss.tests.test_dccae.testdccae method)": [[14, "fusion.criterion.loss.tests.test_dccae.TestDCCAE.test_dccae"]], "test_rr_ae() (fusion.criterion.loss.tests.test_rr_ae.testspatialmultidim method)": [[14, "fusion.criterion.loss.tests.test_rr_ae.TestSpatialMultiDim.test_rr_ae"]], "test_spatial_multi_dim() (fusion.criterion.loss.tests.test_spatial_multi_dim.testspatialmultidim method)": [[14, "fusion.criterion.loss.tests.test_spatial_multi_dim.TestSpatialMultiDim.test_spatial_multi_dim"]], "test_spatial_multi_dim() (fusion.criterion.loss.tests.test_volumetric_multi_dim.testspatialmultidim method)": [[14, "fusion.criterion.loss.tests.test_volumetric_multi_dim.TestSpatialMultiDim.test_spatial_multi_dim"]], "abasemiestimator (class in fusion.criterion.mi_estimator.base_mi_estimator)": [[15, "fusion.criterion.mi_estimator.base_mi_estimator.ABaseMIEstimator"]], "fencheldualestimator (class in fusion.criterion.mi_estimator.fenchel_dual)": [[15, "fusion.criterion.mi_estimator.fenchel_dual.FenchelDualEstimator"]], "infonceestimator (class in fusion.criterion.mi_estimator.infonce)": [[15, "fusion.criterion.mi_estimator.infonce.InfoNceEstimator"]], "fusion.criterion.mi_estimator.base_mi_estimator": [[15, "module-fusion.criterion.mi_estimator.base_mi_estimator"]], "fusion.criterion.mi_estimator.fenchel_dual": [[15, "module-fusion.criterion.mi_estimator.fenchel_dual"]], "fusion.criterion.mi_estimator.infonce": [[15, "module-fusion.criterion.mi_estimator.infonce"]], "abaseclip (class in fusion.criterion.mi_estimator.clip.base_clip)": [[16, "fusion.criterion.mi_estimator.clip.base_clip.ABaseClip"]], "tahnclip (class in fusion.criterion.mi_estimator.clip.tahn_clip)": [[16, "fusion.criterion.mi_estimator.clip.tahn_clip.TahnClip"]], "clip_value (fusion.criterion.mi_estimator.clip.base_clip.abaseclip property)": [[16, "fusion.criterion.mi_estimator.clip.base_clip.ABaseClip.clip_value"]], "fusion.criterion.mi_estimator.clip.base_clip": [[16, "module-fusion.criterion.mi_estimator.clip.base_clip"]], "fusion.criterion.mi_estimator.clip.tahn_clip": [[16, "module-fusion.criterion.mi_estimator.clip.tahn_clip"]], "testclips (class in fusion.criterion.mi_estimator.clip.tests.test_clips)": [[17, "fusion.criterion.mi_estimator.clip.tests.test_clips.TestClips"]], "fusion.criterion.mi_estimator.clip.tests.test_clips": [[17, "module-fusion.criterion.mi_estimator.clip.tests.test_clips"]], "test_tahn_clip() (fusion.criterion.mi_estimator.clip.tests.test_clips.testclips method)": [[17, "fusion.criterion.mi_estimator.clip.tests.test_clips.TestClips.test_tahn_clip"]], "abasecritic (class in fusion.criterion.mi_estimator.critic.base_critic)": [[18, "fusion.criterion.mi_estimator.critic.base_critic.ABaseCritic"]], "cosinesimilarity (class in fusion.criterion.mi_estimator.critic.separable_critic)": [[18, "fusion.criterion.mi_estimator.critic.separable_critic.CosineSimilarity"]], "scaleddotproduct (class in fusion.criterion.mi_estimator.critic.separable_critic)": [[18, "fusion.criterion.mi_estimator.critic.separable_critic.ScaledDotProduct"]], "separablecritic (class in fusion.criterion.mi_estimator.critic.separable_critic)": [[18, "fusion.criterion.mi_estimator.critic.separable_critic.SeparableCritic"]], "fusion.criterion.mi_estimator.critic.base_critic": [[18, "module-fusion.criterion.mi_estimator.critic.base_critic"]], "fusion.criterion.mi_estimator.critic.separable_critic": [[18, "module-fusion.criterion.mi_estimator.critic.separable_critic"]], "testseparablecritics (class in fusion.criterion.mi_estimator.critic.tests.test_separable_critics)": [[19, "fusion.criterion.mi_estimator.critic.tests.test_separable_critics.TestSeparableCritics"]], "fusion.criterion.mi_estimator.critic.tests.test_separable_critics": [[19, "module-fusion.criterion.mi_estimator.critic.tests.test_separable_critics"]], "test_cosine_similarity() (fusion.criterion.mi_estimator.critic.tests.test_separable_critics.testseparablecritics method)": [[19, "fusion.criterion.mi_estimator.critic.tests.test_separable_critics.TestSeparableCritics.test_cosine_similarity"]], "test_scaled_dot_product() (fusion.criterion.mi_estimator.critic.tests.test_separable_critics.testseparablecritics method)": [[19, "fusion.criterion.mi_estimator.critic.tests.test_separable_critics.TestSeparableCritics.test_scaled_dot_product"]], "abasemeasure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.ABaseMeasure"]], "dvmeasure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.DVMeasure"]], "ganmeasure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.GanMeasure"]], "h2measure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.H2Measure"]], "jsdmeasure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.JsdMeasure"]], "klmeasure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.KLMeasure"]], "rklmeasure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.RKLMeasure"]], "w1measure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.W1Measure"]], "x2measure (class in fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.X2Measure"]], "fusion.criterion.mi_estimator.measure.base_measure": [[20, "module-fusion.criterion.mi_estimator.measure.base_measure"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.abasemeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.ABaseMeasure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.dvmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.DVMeasure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.ganmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.GanMeasure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.h2measure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.H2Measure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.jsdmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.JsdMeasure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.klmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.KLMeasure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.rklmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.RKLMeasure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.w1measure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.W1Measure.get_negative_expectation"]], "get_negative_expectation() (fusion.criterion.mi_estimator.measure.base_measure.x2measure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.X2Measure.get_negative_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.abasemeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.ABaseMeasure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.dvmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.DVMeasure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.ganmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.GanMeasure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.h2measure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.H2Measure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.jsdmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.JsdMeasure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.klmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.KLMeasure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.rklmeasure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.RKLMeasure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.w1measure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.W1Measure.get_positive_expectation"]], "get_positive_expectation() (fusion.criterion.mi_estimator.measure.base_measure.x2measure method)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.X2Measure.get_positive_expectation"]], "log_sum_exp() (in module fusion.criterion.mi_estimator.measure.base_measure)": [[20, "fusion.criterion.mi_estimator.measure.base_measure.log_sum_exp"]], "abasepenalty (class in fusion.criterion.mi_estimator.penalty.base_penalty)": [[21, "fusion.criterion.mi_estimator.penalty.base_penalty.ABasePenalty"]], "l2penalty (class in fusion.criterion.mi_estimator.penalty.l2_penalty)": [[21, "fusion.criterion.mi_estimator.penalty.l2_penalty.L2Penalty"]], "fusion.criterion.mi_estimator.penalty.base_penalty": [[21, "module-fusion.criterion.mi_estimator.penalty.base_penalty"]], "fusion.criterion.mi_estimator.penalty.l2_penalty": [[21, "module-fusion.criterion.mi_estimator.penalty.l2_penalty"]], "testpenalties (class in fusion.criterion.mi_estimator.penalty.tests.test_penalties)": [[22, "fusion.criterion.mi_estimator.penalty.tests.test_penalties.TestPenalties"]], "fusion.criterion.mi_estimator.penalty.tests.test_penalties": [[22, "module-fusion.criterion.mi_estimator.penalty.tests.test_penalties"]], "test_l2_penalty() (fusion.criterion.mi_estimator.penalty.tests.test_penalties.testpenalties method)": [[22, "fusion.criterion.mi_estimator.penalty.tests.test_penalties.TestPenalties.test_l2_penalty"]], "testmiestimators (class in fusion.criterion.mi_estimator.tests.test_estimators)": [[23, "fusion.criterion.mi_estimator.tests.test_estimators.TestMIEstimators"]], "fusion.criterion.mi_estimator.tests.test_estimators": [[23, "module-fusion.criterion.mi_estimator.tests.test_estimators"]], "test_fenchel_dual() (fusion.criterion.mi_estimator.tests.test_estimators.testmiestimators method)": [[23, "fusion.criterion.mi_estimator.tests.test_estimators.TestMIEstimators.test_fenchel_dual"]], "test_infonce_estimator() (fusion.criterion.mi_estimator.tests.test_estimators.testmiestimators method)": [[23, "fusion.criterion.mi_estimator.tests.test_estimators.TestMIEstimators.test_infonce_estimator"]], "fusion.criterion.misc.utils": [[24, "module-fusion.criterion.misc.utils"]], "total_loss_summation() (in module fusion.criterion.misc.utils)": [[24, "fusion.criterion.misc.utils.total_loss_summation"]], "canonicalcorrelation (class in fusion.criterion.misc.cca.canonical_correlation)": [[25, "fusion.criterion.misc.cca.canonical_correlation.CanonicalCorrelation"]], "forward() (fusion.criterion.misc.cca.canonical_correlation.canonicalcorrelation method)": [[25, "fusion.criterion.misc.cca.canonical_correlation.CanonicalCorrelation.forward"]], "fusion.criterion.misc.cca.canonical_correlation": [[25, "module-fusion.criterion.misc.cca.canonical_correlation"]], "training (fusion.criterion.misc.cca.canonical_correlation.canonicalcorrelation attribute)": [[25, "fusion.criterion.misc.cca.canonical_correlation.CanonicalCorrelation.training"]], "testcanonicalcorrelation (class in fusion.criterion.misc.cca.tests.test_canonical_correlation)": [[26, "fusion.criterion.misc.cca.tests.test_canonical_correlation.TestCanonicalCorrelation"]], "fusion.criterion.misc.cca.tests.test_canonical_correlation": [[26, "module-fusion.criterion.misc.cca.tests.test_canonical_correlation"]], "test_canonincal_correlation() (fusion.criterion.misc.cca.tests.test_canonical_correlation.testcanonicalcorrelation method)": [[26, "fusion.criterion.misc.cca.tests.test_canonical_correlation.TestCanonicalCorrelation.test_canonincal_correlation"]], "abasedataset (class in fusion.dataset.abasedataset)": [[28, "fusion.dataset.abasedataset.ABaseDataset"]], "abasetransform (class in fusion.dataset.abasetransform)": [[28, "fusion.dataset.abasetransform.ABaseTransform"]], "infer (fusion.dataset.misc.setid attribute)": [[28, "fusion.dataset.misc.SetId.INFER"]], "setid (class in fusion.dataset.misc)": [[28, "fusion.dataset.misc.SetId"]], "test (fusion.dataset.misc.setid attribute)": [[28, "fusion.dataset.misc.SetId.TEST"]], "train (fusion.dataset.misc.setid attribute)": [[28, "fusion.dataset.misc.SetId.TRAIN"]], "valid (fusion.dataset.misc.setid attribute)": [[28, "fusion.dataset.misc.SetId.VALID"]], "fusion.dataset.abasedataset": [[28, "module-fusion.dataset.abasedataset"]], "fusion.dataset.abasetransform": [[28, "module-fusion.dataset.abasetransform"]], "fusion.dataset.dataset_provider": [[28, "module-fusion.dataset.dataset_provider"]], "fusion.dataset.misc": [[28, "module-fusion.dataset.misc"]], "fusion.dataset.utils": [[28, "module-fusion.dataset.utils"]], "get_all_loaders() (fusion.dataset.abasedataset.abasedataset method)": [[28, "fusion.dataset.abasedataset.ABaseDataset.get_all_loaders"]], "get_cv_loaders() (fusion.dataset.abasedataset.abasedataset method)": [[28, "fusion.dataset.abasedataset.ABaseDataset.get_cv_loaders"]], "get_loader() (fusion.dataset.abasedataset.abasedataset method)": [[28, "fusion.dataset.abasedataset.ABaseDataset.get_loader"]], "load() (fusion.dataset.abasedataset.abasedataset method)": [[28, "fusion.dataset.abasedataset.ABaseDataset.load"]], "num_classes (fusion.dataset.abasedataset.abasedataset property)": [[28, "fusion.dataset.abasedataset.ABaseDataset.num_classes"]], "seed_worker() (in module fusion.dataset.utils)": [[28, "fusion.dataset.utils.seed_worker"]], "mnisttransform (class in fusion.dataset.mnist_svhn.transforms)": [[29, "fusion.dataset.mnist_svhn.transforms.MNISTTransform"]], "mnistsvhn (class in fusion.dataset.mnist_svhn.mnist_svhn)": [[29, "fusion.dataset.mnist_svhn.mnist_svhn.MnistSvhn"]], "svhntransform (class in fusion.dataset.mnist_svhn.transforms)": [[29, "fusion.dataset.mnist_svhn.transforms.SVHNTransform"]], "fusion.dataset.mnist_svhn.mnist_svhn": [[29, "module-fusion.dataset.mnist_svhn.mnist_svhn"]], "fusion.dataset.mnist_svhn.transforms": [[29, "module-fusion.dataset.mnist_svhn.transforms"]], "load() (fusion.dataset.mnist_svhn.mnist_svhn.mnistsvhn method)": [[29, "fusion.dataset.mnist_svhn.mnist_svhn.MnistSvhn.load"]], "testmnistsvhn (class in fusion.dataset.mnist_svhn.tests.test_mnist_svhn)": [[30, "fusion.dataset.mnist_svhn.tests.test_mnist_svhn.TestMnistSvhn"]], "fusion.dataset.mnist_svhn.tests.test_mnist_svhn": [[30, "module-fusion.dataset.mnist_svhn.tests.test_mnist_svhn"]], "test_mnist_svhn() (fusion.dataset.mnist_svhn.tests.test_mnist_svhn.testmnistsvhn method)": [[30, "fusion.dataset.mnist_svhn.tests.test_mnist_svhn.TestMnistSvhn.test_mnist_svhn"]], "mnimasktransform (class in fusion.dataset.oasis.transforms)": [[31, "fusion.dataset.oasis.transforms.MNIMaskTransform"]], "oasis (class in fusion.dataset.oasis.oasis)": [[31, "fusion.dataset.oasis.oasis.Oasis"]], "volumetricrandomcrop (class in fusion.dataset.oasis.transforms)": [[31, "fusion.dataset.oasis.transforms.VolumetricRandomCrop"]], "affine() (fusion.dataset.oasis.oasis.oasis method)": [[31, "fusion.dataset.oasis.oasis.Oasis.affine"]], "apply_transform() (fusion.dataset.oasis.transforms.mnimasktransform method)": [[31, "fusion.dataset.oasis.transforms.MNIMaskTransform.apply_transform"]], "apply_transform() (fusion.dataset.oasis.transforms.volumetricrandomcrop method)": [[31, "fusion.dataset.oasis.transforms.VolumetricRandomCrop.apply_transform"]], "fusion.dataset.oasis.oasis": [[31, "module-fusion.dataset.oasis.oasis"]], "fusion.dataset.oasis.transforms": [[31, "module-fusion.dataset.oasis.transforms"]], "header() (fusion.dataset.oasis.oasis.oasis method)": [[31, "fusion.dataset.oasis.oasis.Oasis.header"]], "load() (fusion.dataset.oasis.oasis.oasis method)": [[31, "fusion.dataset.oasis.oasis.Oasis.load"]], "mask (fusion.dataset.oasis.oasis.oasis property)": [[31, "fusion.dataset.oasis.oasis.Oasis.mask"]], "orientation() (fusion.dataset.oasis.oasis.oasis method)": [[31, "fusion.dataset.oasis.oasis.Oasis.orientation"]], "process_volume() (fusion.dataset.oasis.transforms.mnimasktransform method)": [[31, "fusion.dataset.oasis.transforms.MNIMaskTransform.process_volume"]], "process_volume() (fusion.dataset.oasis.transforms.volumetricrandomcrop method)": [[31, "fusion.dataset.oasis.transforms.VolumetricRandomCrop.process_volume"]], "randomrotation (class in fusion.dataset.two_view_mnist.transforms)": [[32, "fusion.dataset.two_view_mnist.transforms.RandomRotation"]], "randomrotationtransform (class in fusion.dataset.two_view_mnist.transforms)": [[32, "fusion.dataset.two_view_mnist.transforms.RandomRotationTransform"]], "twoviewmnist (class in fusion.dataset.two_view_mnist.two_view_mnist)": [[32, "fusion.dataset.two_view_mnist.two_view_mnist.TwoViewMnist"]], "twoviewmnisttransform (class in fusion.dataset.two_view_mnist.transforms)": [[32, "fusion.dataset.two_view_mnist.transforms.TwoViewMnistTransform"]], "uniformnoise (class in fusion.dataset.two_view_mnist.transforms)": [[32, "fusion.dataset.two_view_mnist.transforms.UniformNoise"]], "uniformnoisetransform (class in fusion.dataset.two_view_mnist.transforms)": [[32, "fusion.dataset.two_view_mnist.transforms.UniformNoiseTransform"]], "unitintervalscale (class in fusion.dataset.two_view_mnist.transforms)": [[32, "fusion.dataset.two_view_mnist.transforms.UnitIntervalScale"]], "fusion.dataset.two_view_mnist.transforms": [[32, "module-fusion.dataset.two_view_mnist.transforms"]], "fusion.dataset.two_view_mnist.two_view_mnist": [[32, "module-fusion.dataset.two_view_mnist.two_view_mnist"]], "load() (fusion.dataset.two_view_mnist.two_view_mnist.twoviewmnist method)": [[32, "fusion.dataset.two_view_mnist.two_view_mnist.TwoViewMnist.load"]], "testtwoviewmnist (class in fusion.dataset.two_view_mnist.tests.test_two_view_mnist)": [[33, "fusion.dataset.two_view_mnist.tests.test_two_view_mnist.TestTwoViewMnist"]], "fusion.dataset.two_view_mnist.tests.test_two_view_mnist": [[33, "module-fusion.dataset.two_view_mnist.tests.test_two_view_mnist"]], "test_two_view_mnist() (fusion.dataset.two_view_mnist.tests.test_two_view_mnist.testtwoviewmnist method)": [[33, "fusion.dataset.two_view_mnist.tests.test_two_view_mnist.TestTwoViewMnist.test_two_view_mnist"]], "customrandomblur (class in fusion.dataset.ukbiobank.transforms)": [[34, "fusion.dataset.ukbiobank.transforms.CustomRandomBlur"]], "ukbiobank (class in fusion.dataset.ukbiobank.ukbiobank)": [[34, "fusion.dataset.ukbiobank.ukbiobank.UKBioBank"]], "ukbiobankagp (class in fusion.dataset.ukbiobank.ukbiobank_agp)": [[34, "fusion.dataset.ukbiobank.ukbiobank_agp.UKBioBankAGP"]], "ukbiobankmp (class in fusion.dataset.ukbiobank.ukbiobank_mp)": [[34, "fusion.dataset.ukbiobank.ukbiobank_mp.UKBioBankMP"]], "ukbiobankmpram (class in fusion.dataset.ukbiobank.ukbiobank_mp_ram)": [[34, "fusion.dataset.ukbiobank.ukbiobank_mp_ram.UKBioBankMPRAM"]], "ukbiobankram (class in fusion.dataset.ukbiobank.ukbiobank_ram)": [[34, "fusion.dataset.ukbiobank.ukbiobank_ram.UKBioBankRAM"]], "apply_blur() (fusion.dataset.ukbiobank.transforms.customrandomblur method)": [[34, "fusion.dataset.ukbiobank.transforms.CustomRandomBlur.apply_blur"]], "apply_transform() (fusion.dataset.ukbiobank.transforms.customrandomblur method)": [[34, "fusion.dataset.ukbiobank.transforms.CustomRandomBlur.apply_transform"]], "blur() (fusion.dataset.ukbiobank.transforms.customrandomblur static method)": [[34, "fusion.dataset.ukbiobank.transforms.CustomRandomBlur.blur"]], "fusion.dataset.ukbiobank.transforms": [[34, "module-fusion.dataset.ukbiobank.transforms"]], "fusion.dataset.ukbiobank.ukbiobank": [[34, "module-fusion.dataset.ukbiobank.ukbiobank"]], "fusion.dataset.ukbiobank.ukbiobank_agp": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_agp"]], "fusion.dataset.ukbiobank.ukbiobank_mp": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_mp"]], "fusion.dataset.ukbiobank.ukbiobank_mp_ram": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_mp_ram"]], "fusion.dataset.ukbiobank.ukbiobank_ram": [[34, "module-fusion.dataset.ukbiobank.ukbiobank_ram"]], "get_params() (fusion.dataset.ukbiobank.transforms.customrandomblur method)": [[34, "fusion.dataset.ukbiobank.transforms.CustomRandomBlur.get_params"]], "label_2_name (fusion.dataset.ukbiobank.ukbiobank.ukbiobank attribute)": [[34, "fusion.dataset.ukbiobank.ukbiobank.UKBioBank.label_2_name"]], "load() (fusion.dataset.ukbiobank.ukbiobank.ukbiobank method)": [[34, "fusion.dataset.ukbiobank.ukbiobank.UKBioBank.load"]], "testukbiobank (class in fusion.dataset.ukbiobank.tests.test_ukbiobank)": [[35, "fusion.dataset.ukbiobank.tests.test_ukbiobank.TestUKBioBank"]], "fusion.dataset.ukbiobank.tests.test_ukbiobank": [[35, "module-fusion.dataset.ukbiobank.tests.test_ukbiobank"]], "test_ukbiobank() (fusion.dataset.ukbiobank.tests.test_ukbiobank.testukbiobank method)": [[35, "fusion.dataset.ukbiobank.tests.test_ukbiobank.TestUKBioBank.test_ukbiobank"]], "test_ukbiobank_mp() (fusion.dataset.ukbiobank.tests.test_ukbiobank.testukbiobank method)": [[35, "fusion.dataset.ukbiobank.tests.test_ukbiobank.TestUKBioBank.test_ukbiobank_mp"]], "test_ukbiobank_mp_ram() (fusion.dataset.ukbiobank.tests.test_ukbiobank.testukbiobank method)": [[35, "fusion.dataset.ukbiobank.tests.test_ukbiobank.TestUKBioBank.test_ukbiobank_mp_ram"]], "test_ukbiobank_ram() (fusion.dataset.ukbiobank.tests.test_ukbiobank.testukbiobank method)": [[35, "fusion.dataset.ukbiobank.tests.test_ukbiobank.TestUKBioBank.test_ukbiobank_ram"]], "experiment (class in fusion.experiment.experiment)": [[36, "fusion.experiment.experiment.Experiment"]], "fusion.experiment.experiment": [[36, "module-fusion.experiment.experiment"]], "setup_new_experiment() (fusion.experiment.experiment.experiment method)": [[36, "fusion.experiment.experiment.Experiment.setup_new_experiment"]], "start() (fusion.experiment.experiment.experiment method)": [[36, "fusion.experiment.experiment.Experiment.start"]], "abasemodel (class in fusion.model.abasemodel)": [[37, "fusion.model.abasemodel.ABaseModel"]], "fusion.model.abasemodel": [[37, "module-fusion.model.abasemodel"]], "fusion.model.model_provider": [[37, "module-fusion.model.model_provider"]], "get_encoder() (fusion.model.abasemodel.abasemodel method)": [[37, "fusion.model.abasemodel.ABaseModel.get_encoder"]], "get_encoder_list() (fusion.model.abasemodel.abasemodel method)": [[37, "fusion.model.abasemodel.ABaseModel.get_encoder_list"]], "training (fusion.model.abasemodel.abasemodel attribute)": [[37, "fusion.model.abasemodel.ABaseModel.training"]], "ae (class in fusion.model.ae.ae)": [[38, "fusion.model.ae.ae.AE"]], "forward() (fusion.model.ae.ae.ae method)": [[38, "fusion.model.ae.ae.AE.forward"]], "fusion.model.ae.ae": [[38, "module-fusion.model.ae.ae"]], "training (fusion.model.ae.ae.ae attribute)": [[38, "fusion.model.ae.ae.AE.training"]], "testae (class in fusion.model.ae.tests.test_ae)": [[39, "fusion.model.ae.tests.test_ae.TestAE"]], "fusion.model.ae.tests.test_ae": [[39, "module-fusion.model.ae.tests.test_ae"]], "test_forward() (fusion.model.ae.tests.test_ae.testae method)": [[39, "fusion.model.ae.tests.test_ae.TestAE.test_forward"]], "dim (class in fusion.model.dim.dim)": [[40, "fusion.model.dim.dim.Dim"]], "forward() (fusion.model.dim.dim.dim method)": [[40, "fusion.model.dim.dim.Dim.forward"]], "fusion.model.dim.dim": [[40, "module-fusion.model.dim.dim"]], "training (fusion.model.dim.dim.dim attribute)": [[40, "fusion.model.dim.dim.Dim.training"]], "testdim (class in fusion.model.dim.tests.test_dim)": [[41, "fusion.model.dim.tests.test_dim.TestDim"]], "fusion.model.dim.tests.test_dim": [[41, "module-fusion.model.dim.tests.test_dim"]], "test_forward() (fusion.model.dim.tests.test_dim.testdim method)": [[41, "fusion.model.dim.tests.test_dim.TestDim.test_forward"]], "encoderextractor (class in fusion.model.encoder_extractor.encoder_extractor)": [[42, "fusion.model.encoder_extractor.encoder_extractor.EncoderExtractor"]], "forward() (fusion.model.encoder_extractor.encoder_extractor.encoderextractor method)": [[42, "fusion.model.encoder_extractor.encoder_extractor.EncoderExtractor.forward"]], "fusion.model.encoder_extractor.encoder_extractor": [[42, "module-fusion.model.encoder_extractor.encoder_extractor"]], "training (fusion.model.encoder_extractor.encoder_extractor.encoderextractor attribute)": [[42, "fusion.model.encoder_extractor.encoder_extractor.EncoderExtractor.training"]], "linearevaluator (class in fusion.model.linear_evaluator.linear_evaluator)": [[43, "fusion.model.linear_evaluator.linear_evaluator.LinearEvaluator"]], "forward() (fusion.model.linear_evaluator.linear_evaluator.linearevaluator method)": [[43, "fusion.model.linear_evaluator.linear_evaluator.LinearEvaluator.forward"]], "fusion.model.linear_evaluator.linear_evaluator": [[43, "module-fusion.model.linear_evaluator.linear_evaluator"]], "training (fusion.model.linear_evaluator.linear_evaluator.linearevaluator attribute)": [[43, "fusion.model.linear_evaluator.linear_evaluator.LinearEvaluator.training"]], "pixl (class in fusion.model.pixl.pixl)": [[45, "fusion.model.pixl.pixl.PIXL"]], "forward() (fusion.model.pixl.pixl.pixl method)": [[45, "fusion.model.pixl.pixl.PIXL.forward"]], "fusion.model.pixl.pixl": [[45, "module-fusion.model.pixl.pixl"]], "get_encoder_list() (fusion.model.pixl.pixl.pixl method)": [[45, "fusion.model.pixl.pixl.PIXL.get_encoder_list"]], "training (fusion.model.pixl.pixl.pixl attribute)": [[45, "fusion.model.pixl.pixl.PIXL.training"]], "smoothvanillabackprop (class in fusion.model.saliency.smoothgrad)": [[46, "fusion.model.saliency.smoothgrad.SmoothVanillaBackprop"]], "forward() (fusion.model.saliency.smoothgrad.smoothvanillabackprop method)": [[46, "fusion.model.saliency.smoothgrad.SmoothVanillaBackprop.forward"]], "fusion.model.saliency.smoothgrad": [[46, "module-fusion.model.saliency.smoothgrad"]], "generate_gradients() (fusion.model.saliency.smoothgrad.smoothvanillabackprop method)": [[46, "fusion.model.saliency.smoothgrad.SmoothVanillaBackprop.generate_gradients"]], "hook_first_layer() (fusion.model.saliency.smoothgrad.smoothvanillabackprop method)": [[46, "fusion.model.saliency.smoothgrad.SmoothVanillaBackprop.hook_first_layer"]], "supervised (class in fusion.model.supervised.supervised)": [[47, "fusion.model.supervised.supervised.Supervised"]], "forward() (fusion.model.supervised.supervised.supervised method)": [[47, "fusion.model.supervised.supervised.Supervised.forward"]], "fusion.model.supervised.supervised": [[47, "module-fusion.model.supervised.supervised"]], "training (fusion.model.supervised.supervised.supervised attribute)": [[47, "fusion.model.supervised.supervised.Supervised.training"]], "fusion.optimizer.optimizer_provider": [[48, "module-fusion.optimizer.optimizer_provider"]], "abaserunner (class in fusion.runner.abaserunner)": [[49, "fusion.runner.abaserunner.ABaseRunner"]], "fusion.runner.abaserunner": [[49, "module-fusion.runner.abaserunner"]], "fusion.runner.runner_provider": [[49, "module-fusion.runner.runner_provider"]], "catalystrunner (class in fusion.runner.catalyst.catalyst_runner)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner"]], "mnistsvhnrunner (class in fusion.runner.catalyst.mnist_svhn_runner)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner"]], "oasisrunner (class in fusion.runner.catalyst.oasis_runner)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner"]], "batch (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.batch"]], "batch (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.batch"]], "batch_metrics (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.batch_metrics"]], "batch_metrics (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.batch_metrics"]], "batch_size (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.batch_size"]], "batch_size (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.batch_size"]], "batch_step (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.batch_step"]], "batch_step (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.batch_step"]], "callbacks (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.callbacks"]], "callbacks (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.callbacks"]], "criterion (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.criterion"]], "criterion (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.criterion"]], "engine (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.engine"]], "engine (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.engine"]], "epoch (fusion.runner.catalyst.catalyst_runner.catalystrunner attribute)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.epoch"]], "epoch_metrics (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.epoch_metrics"]], "epoch_metrics (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.epoch_metrics"]], "epoch_step (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.epoch_step"]], "epoch_step (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.epoch_step"]], "exception (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.exception"]], "exception (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.exception"]], "experiment_metrics (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.experiment_metrics"]], "experiment_metrics (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.experiment_metrics"]], "fusion.runner.catalyst.catalyst_runner": [[50, "module-fusion.runner.catalyst.catalyst_runner"]], "fusion.runner.catalyst.mnist_svhn_runner": [[50, "module-fusion.runner.catalyst.mnist_svhn_runner"]], "fusion.runner.catalyst.oasis_runner": [[50, "module-fusion.runner.catalyst.oasis_runner"]], "get_loaders() (fusion.runner.catalyst.catalyst_runner.catalystrunner method)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.get_loaders"]], "handle_batch() (fusion.runner.catalyst.catalyst_runner.catalystrunner method)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.handle_batch"]], "is_infer_loader (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.is_infer_loader"]], "is_infer_loader (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.is_infer_loader"]], "is_train_loader (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.is_train_loader"]], "is_train_loader (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.is_train_loader"]], "is_valid_loader (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.is_valid_loader"]], "is_valid_loader (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.is_valid_loader"]], "loader (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader"]], "loader (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader"]], "loader_batch_len (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader_batch_len"]], "loader_batch_len (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader_batch_len"]], "loader_batch_size (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader_batch_size"]], "loader_batch_size (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader_batch_size"]], "loader_batch_step (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader_batch_step"]], "loader_batch_step (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader_batch_step"]], "loader_key (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader_key"]], "loader_key (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader_key"]], "loader_metrics (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader_metrics"]], "loader_metrics (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader_metrics"]], "loader_sample_len (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader_sample_len"]], "loader_sample_len (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader_sample_len"]], "loader_sample_step (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loader_sample_step"]], "loader_sample_step (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loader_sample_step"]], "loaders (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loaders"]], "loaders (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loaders"]], "loggers (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.loggers"]], "loggers (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.loggers"]], "model (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.model"]], "model (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.model"]], "need_early_stop (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.need_early_stop"]], "need_early_stop (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.need_early_stop"]], "on_loader_end() (fusion.runner.catalyst.catalyst_runner.catalystrunner method)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.on_loader_end"]], "on_loader_start() (fusion.runner.catalyst.catalyst_runner.catalystrunner method)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.on_loader_start"]], "optimizer (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.optimizer"]], "optimizer (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.optimizer"]], "predict_batch() (fusion.runner.catalyst.catalyst_runner.catalystrunner method)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.predict_batch"]], "sample_step (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.sample_step"]], "sample_step (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.sample_step"]], "scheduler (fusion.runner.catalyst.mnist_svhn_runner.mnistsvhnrunner attribute)": [[50, "fusion.runner.catalyst.mnist_svhn_runner.MnistSvhnRunner.scheduler"]], "scheduler (fusion.runner.catalyst.oasis_runner.oasisrunner attribute)": [[50, "fusion.runner.catalyst.oasis_runner.OasisRunner.scheduler"]], "train_batch_id (fusion.runner.catalyst.catalyst_runner.catalystrunner attribute)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.train_batch_id"]], "valid_batch_id (fusion.runner.catalyst.catalyst_runner.catalystrunner attribute)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.valid_batch_id"]], "valid_loss (fusion.runner.catalyst.catalyst_runner.catalystrunner attribute)": [[50, "fusion.runner.catalyst.catalyst_runner.CatalystRunner.valid_loss"]], "fusion.scheduler.scheduler_provider": [[51, "module-fusion.scheduler.scheduler_provider"]], "atask (class in fusion.task.atask)": [[52, "fusion.task.atask.ATask"]], "ataskbuilder (class in fusion.task.atask)": [[52, "fusion.task.atask.ATaskBuilder"]], "feature_extraction (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.FEATURE_EXTRACTION"]], "inference (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.INFERENCE"]], "linear_evaluation (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.LINEAR_EVALUATION"]], "logits_extraction (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.LOGITS_EXTRACTION"]], "logreg_evaluation (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.LOGREG_EVALUATION"]], "pretraining (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.PRETRAINING"]], "saliency (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.SALIENCY"]], "tsne (fusion.task.misc.taskid attribute)": [[52, "fusion.task.misc.TaskId.TSNE"]], "taskdirector (class in fusion.task.atask)": [[52, "fusion.task.atask.TaskDirector"]], "taskid (class in fusion.task.misc)": [[52, "fusion.task.misc.TaskId"]], "add_criterion() (fusion.task.atask.ataskbuilder method)": [[52, "fusion.task.atask.ATaskBuilder.add_criterion"]], "add_dataset() (fusion.task.atask.ataskbuilder method)": [[52, "fusion.task.atask.ATaskBuilder.add_dataset"]], "add_model() (fusion.task.atask.ataskbuilder method)": [[52, "fusion.task.atask.ATaskBuilder.add_model"]], "add_optimizer() (fusion.task.atask.ataskbuilder method)": [[52, "fusion.task.atask.ATaskBuilder.add_optimizer"]], "add_runner() (fusion.task.atask.ataskbuilder method)": [[52, "fusion.task.atask.ATaskBuilder.add_runner"]], "add_scheduler() (fusion.task.atask.ataskbuilder method)": [[52, "fusion.task.atask.ATaskBuilder.add_scheduler"]], "construct_task() (fusion.task.atask.taskdirector method)": [[52, "fusion.task.atask.TaskDirector.construct_task"]], "create_new_task() (fusion.task.atask.ataskbuilder method)": [[52, "fusion.task.atask.ATaskBuilder.create_new_task"]], "criterion (fusion.task.atask.atask property)": [[52, "fusion.task.atask.ATask.criterion"]], "dataset (fusion.task.atask.atask property)": [[52, "fusion.task.atask.ATask.dataset"]], "fusion.task.atask": [[52, "module-fusion.task.atask"]], "fusion.task.misc": [[52, "module-fusion.task.misc"]], "fusion.task.task_builder_provider": [[52, "module-fusion.task.task_builder_provider"]], "get_task() (fusion.task.atask.taskdirector method)": [[52, "fusion.task.atask.TaskDirector.get_task"]], "model (fusion.task.atask.atask property)": [[52, "fusion.task.atask.ATask.model"]], "optimizer (fusion.task.atask.atask property)": [[52, "fusion.task.atask.ATask.optimizer"]], "run() (fusion.task.atask.atask method)": [[52, "fusion.task.atask.ATask.run"]], "runner (fusion.task.atask.atask property)": [[52, "fusion.task.atask.ATask.runner"]], "scheduler (fusion.task.atask.atask property)": [[52, "fusion.task.atask.ATask.scheduler"]], "task (fusion.task.atask.ataskbuilder property)": [[52, "fusion.task.atask.ATaskBuilder.task"]], "task_args (fusion.task.atask.atask property)": [[52, "fusion.task.atask.ATask.task_args"]], "featureextractiontask (class in fusion.task.feature_extraction.feature_extraction_task)": [[53, "fusion.task.feature_extraction.feature_extraction_task.FeatureExtractionTask"]], "featureextractiontaskbuilder (class in fusion.task.feature_extraction.feature_extraction_task)": [[53, "fusion.task.feature_extraction.feature_extraction_task.FeatureExtractionTaskBuilder"]], "add_model() (fusion.task.feature_extraction.feature_extraction_task.featureextractiontaskbuilder method)": [[53, "fusion.task.feature_extraction.feature_extraction_task.FeatureExtractionTaskBuilder.add_model"]], "create_new_task() (fusion.task.feature_extraction.feature_extraction_task.featureextractiontaskbuilder method)": [[53, "fusion.task.feature_extraction.feature_extraction_task.FeatureExtractionTaskBuilder.create_new_task"]], "fusion.task.feature_extraction.feature_extraction_task": [[53, "module-fusion.task.feature_extraction.feature_extraction_task"]], "run() (fusion.task.feature_extraction.feature_extraction_task.featureextractiontask method)": [[53, "fusion.task.feature_extraction.feature_extraction_task.FeatureExtractionTask.run"]], "inferencetask (class in fusion.task.inference.inference_task)": [[54, "fusion.task.inference.inference_task.InferenceTask"]], "inferencetaskbuilder (class in fusion.task.inference.inference_task)": [[54, "fusion.task.inference.inference_task.InferenceTaskBuilder"]], "add_model() (fusion.task.inference.inference_task.inferencetaskbuilder method)": [[54, "fusion.task.inference.inference_task.InferenceTaskBuilder.add_model"]], "create_new_task() (fusion.task.inference.inference_task.inferencetaskbuilder method)": [[54, "fusion.task.inference.inference_task.InferenceTaskBuilder.create_new_task"]], "fusion.task.inference.inference_task": [[54, "module-fusion.task.inference.inference_task"]], "run() (fusion.task.inference.inference_task.inferencetask method)": [[54, "fusion.task.inference.inference_task.InferenceTask.run"]], "linearevaluationtask (class in fusion.task.linear_evaluation.linear_evaluation_task)": [[55, "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTask"]], "linearevaluationtaskbuilder (class in fusion.task.linear_evaluation.linear_evaluation_task)": [[55, "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTaskBuilder"]], "add_model() (fusion.task.linear_evaluation.linear_evaluation_task.linearevaluationtaskbuilder method)": [[55, "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTaskBuilder.add_model"]], "add_optimizer() (fusion.task.linear_evaluation.linear_evaluation_task.linearevaluationtaskbuilder method)": [[55, "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTaskBuilder.add_optimizer"]], "add_scheduler() (fusion.task.linear_evaluation.linear_evaluation_task.linearevaluationtaskbuilder method)": [[55, "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTaskBuilder.add_scheduler"]], "create_new_task() (fusion.task.linear_evaluation.linear_evaluation_task.linearevaluationtaskbuilder method)": [[55, "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTaskBuilder.create_new_task"]], "fusion.task.linear_evaluation.linear_evaluation_task": [[55, "module-fusion.task.linear_evaluation.linear_evaluation_task"]], "run() (fusion.task.linear_evaluation.linear_evaluation_task.linearevaluationtask method)": [[55, "fusion.task.linear_evaluation.linear_evaluation_task.LinearEvaluationTask.run"]], "logitsextractiontask (class in fusion.task.logits_extraction.logits_extraction_task)": [[56, "fusion.task.logits_extraction.logits_extraction_task.LogitsExtractionTask"]], "logitsextractiontaskbuilder (class in fusion.task.logits_extraction.logits_extraction_task)": [[56, "fusion.task.logits_extraction.logits_extraction_task.LogitsExtractionTaskBuilder"]], "create_new_task() (fusion.task.logits_extraction.logits_extraction_task.logitsextractiontaskbuilder method)": [[56, "fusion.task.logits_extraction.logits_extraction_task.LogitsExtractionTaskBuilder.create_new_task"]], "fusion.task.logits_extraction.logits_extraction_task": [[56, "module-fusion.task.logits_extraction.logits_extraction_task"]], "run() (fusion.task.logits_extraction.logits_extraction_task.logitsextractiontask method)": [[56, "fusion.task.logits_extraction.logits_extraction_task.LogitsExtractionTask.run"]], "customweightsandbiasescallback (class in fusion.task.logreg_evaluation.logreg_evaluation_task)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.CustomWeightsAndBiasesCallback"]], "logregevaluationtask (class in fusion.task.logreg_evaluation.logreg_evaluation_task)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTask"]], "logregevaluationtaskbuilder (class in fusion.task.logreg_evaluation.logreg_evaluation_task)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTaskBuilder"]], "add_criterion() (fusion.task.logreg_evaluation.logreg_evaluation_task.logregevaluationtaskbuilder method)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTaskBuilder.add_criterion"]], "add_model() (fusion.task.logreg_evaluation.logreg_evaluation_task.logregevaluationtaskbuilder method)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTaskBuilder.add_model"]], "add_optimizer() (fusion.task.logreg_evaluation.logreg_evaluation_task.logregevaluationtaskbuilder method)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTaskBuilder.add_optimizer"]], "add_scheduler() (fusion.task.logreg_evaluation.logreg_evaluation_task.logregevaluationtaskbuilder method)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTaskBuilder.add_scheduler"]], "create_new_task() (fusion.task.logreg_evaluation.logreg_evaluation_task.logregevaluationtaskbuilder method)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTaskBuilder.create_new_task"]], "fusion.task.logreg_evaluation.logreg_evaluation_task": [[57, "module-fusion.task.logreg_evaluation.logreg_evaluation_task"]], "run() (fusion.task.logreg_evaluation.logreg_evaluation_task.logregevaluationtask method)": [[57, "fusion.task.logreg_evaluation.logreg_evaluation_task.LogRegEvaluationTask.run"]], "pretrainingtask (class in fusion.task.pretraining.pretraining_task)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTask"]], "pretrainingtaskbuilder (class in fusion.task.pretraining.pretraining_task)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder"]], "add_criterion() (fusion.task.pretraining.pretraining_task.pretrainingtaskbuilder method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder.add_criterion"]], "add_dataset() (fusion.task.pretraining.pretraining_task.pretrainingtaskbuilder method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder.add_dataset"]], "add_model() (fusion.task.pretraining.pretraining_task.pretrainingtaskbuilder method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder.add_model"]], "add_optimizer() (fusion.task.pretraining.pretraining_task.pretrainingtaskbuilder method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder.add_optimizer"]], "add_runner() (fusion.task.pretraining.pretraining_task.pretrainingtaskbuilder method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder.add_runner"]], "add_scheduler() (fusion.task.pretraining.pretraining_task.pretrainingtaskbuilder method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder.add_scheduler"]], "create_new_task() (fusion.task.pretraining.pretraining_task.pretrainingtaskbuilder method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTaskBuilder.create_new_task"]], "fusion.task.pretraining.pretraining_task": [[58, "module-fusion.task.pretraining.pretraining_task"]], "run() (fusion.task.pretraining.pretraining_task.pretrainingtask method)": [[58, "fusion.task.pretraining.pretraining_task.PretrainingTask.run"]], "saliencytask (class in fusion.task.saliency.saliency)": [[59, "fusion.task.saliency.saliency.SaliencyTask"]], "saliencytaskbuilder (class in fusion.task.saliency.saliency)": [[59, "fusion.task.saliency.saliency.SaliencyTaskBuilder"]], "add_model() (fusion.task.saliency.saliency.saliencytaskbuilder method)": [[59, "fusion.task.saliency.saliency.SaliencyTaskBuilder.add_model"]], "add_runner() (fusion.task.saliency.saliency.saliencytaskbuilder method)": [[59, "fusion.task.saliency.saliency.SaliencyTaskBuilder.add_runner"]], "create_new_task() (fusion.task.saliency.saliency.saliencytaskbuilder method)": [[59, "fusion.task.saliency.saliency.SaliencyTaskBuilder.create_new_task"]], "fusion.task.saliency.saliency": [[59, "module-fusion.task.saliency.saliency"]], "run() (fusion.task.saliency.saliency.saliencytask method)": [[59, "fusion.task.saliency.saliency.SaliencyTask.run"]], "tsnetask (class in fusion.task.tsne.tsne_task)": [[60, "fusion.task.tsne.tsne_task.TsneTask"]], "tsnetaskbuilder (class in fusion.task.tsne.tsne_task)": [[60, "fusion.task.tsne.tsne_task.TsneTaskBuilder"]], "add_model() (fusion.task.tsne.tsne_task.tsnetaskbuilder method)": [[60, "fusion.task.tsne.tsne_task.TsneTaskBuilder.add_model"]], "create_new_task() (fusion.task.tsne.tsne_task.tsnetaskbuilder method)": [[60, "fusion.task.tsne.tsne_task.TsneTaskBuilder.create_new_task"]], "fusion.task.tsne.tsne_task": [[60, "module-fusion.task.tsne.tsne_task"]], "run() (fusion.task.tsne.tsne_task.tsnetask method)": [[60, "fusion.task.tsne.tsne_task.TsneTask.run"]], "factory (class in fusion.utils.object_provider)": [[61, "fusion.utils.object_provider.Factory"]], "objectprovider (class in fusion.utils.object_provider)": [[61, "fusion.utils.object_provider.ObjectProvider"]], "create() (fusion.utils.object_provider.factory method)": [[61, "fusion.utils.object_provider.Factory.create"]], "fusion.utils.object_provider": [[61, "module-fusion.utils.object_provider"]], "get() (fusion.utils.object_provider.objectprovider method)": [[61, "fusion.utils.object_provider.ObjectProvider.get"]], "register_object() (fusion.utils.object_provider.factory method)": [[61, "fusion.utils.object_provider.Factory.register_object"]]}})